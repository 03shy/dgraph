// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb.proto

package pb

import (
	context "context"
	fmt "fmt"
	pb "github.com/dgraph-io/badger/pb"
	api "github.com/dgraph-io/dgo/protos/api"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DirectedEdge_Op int32

const (
	DirectedEdge_SET DirectedEdge_Op = 0
	DirectedEdge_DEL DirectedEdge_Op = 1
)

var DirectedEdge_Op_name = map[int32]string{
	0: "SET",
	1: "DEL",
}

var DirectedEdge_Op_value = map[string]int32{
	"SET": 0,
	"DEL": 1,
}

func (x DirectedEdge_Op) String() string {
	return proto.EnumName(DirectedEdge_Op_name, int32(x))
}

func (DirectedEdge_Op) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{17, 0}
}

type Posting_ValType int32

const (
	Posting_DEFAULT  Posting_ValType = 0
	Posting_BINARY   Posting_ValType = 1
	Posting_INT      Posting_ValType = 2
	Posting_FLOAT    Posting_ValType = 3
	Posting_BOOL     Posting_ValType = 4
	Posting_DATETIME Posting_ValType = 5
	Posting_GEO      Posting_ValType = 6
	Posting_UID      Posting_ValType = 7
	Posting_PASSWORD Posting_ValType = 8
	Posting_STRING   Posting_ValType = 9
)

var Posting_ValType_name = map[int32]string{
	0: "DEFAULT",
	1: "BINARY",
	2: "INT",
	3: "FLOAT",
	4: "BOOL",
	5: "DATETIME",
	6: "GEO",
	7: "UID",
	8: "PASSWORD",
	9: "STRING",
}

var Posting_ValType_value = map[string]int32{
	"DEFAULT":  0,
	"BINARY":   1,
	"INT":      2,
	"FLOAT":    3,
	"BOOL":     4,
	"DATETIME": 5,
	"GEO":      6,
	"UID":      7,
	"PASSWORD": 8,
	"STRING":   9,
}

func (x Posting_ValType) String() string {
	return proto.EnumName(Posting_ValType_name, int32(x))
}

func (Posting_ValType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{22, 0}
}

type Posting_PostingType int32

const (
	Posting_REF        Posting_PostingType = 0
	Posting_VALUE      Posting_PostingType = 1
	Posting_VALUE_LANG Posting_PostingType = 2
)

var Posting_PostingType_name = map[int32]string{
	0: "REF",
	1: "VALUE",
	2: "VALUE_LANG",
}

var Posting_PostingType_value = map[string]int32{
	"REF":        0,
	"VALUE":      1,
	"VALUE_LANG": 2,
}

func (x Posting_PostingType) String() string {
	return proto.EnumName(Posting_PostingType_name, int32(x))
}

func (Posting_PostingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{22, 1}
}

type SchemaUpdate_Directive int32

const (
	SchemaUpdate_NONE    SchemaUpdate_Directive = 0
	SchemaUpdate_INDEX   SchemaUpdate_Directive = 1
	SchemaUpdate_REVERSE SchemaUpdate_Directive = 2
	SchemaUpdate_DELETE  SchemaUpdate_Directive = 3
)

var SchemaUpdate_Directive_name = map[int32]string{
	0: "NONE",
	1: "INDEX",
	2: "REVERSE",
	3: "DELETE",
}

var SchemaUpdate_Directive_value = map[string]int32{
	"NONE":    0,
	"INDEX":   1,
	"REVERSE": 2,
	"DELETE":  3,
}

func (x SchemaUpdate_Directive) String() string {
	return proto.EnumName(SchemaUpdate_Directive_name, int32(x))
}

func (SchemaUpdate_Directive) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{34, 0}
}

type List struct {
	Uids                 []uint64 `protobuf:"fixed64,1,rep,packed,name=uids,proto3" json:"uids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *List) Reset()         { *m = List{} }
func (m *List) String() string { return proto.CompactTextString(m) }
func (*List) ProtoMessage()    {}
func (*List) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{0}
}

func (m *List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_List.Unmarshal(m, b)
}
func (m *List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_List.Marshal(b, m, deterministic)
}
func (m *List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_List.Merge(m, src)
}
func (m *List) XXX_Size() int {
	return xxx_messageInfo_List.Size(m)
}
func (m *List) XXX_DiscardUnknown() {
	xxx_messageInfo_List.DiscardUnknown(m)
}

var xxx_messageInfo_List proto.InternalMessageInfo

func (m *List) GetUids() []uint64 {
	if m != nil {
		return m.Uids
	}
	return nil
}

type TaskValue struct {
	Val                  []byte          `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	ValType              Posting_ValType `protobuf:"varint,2,opt,name=val_type,json=valType,proto3,enum=pb.Posting_ValType" json:"val_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TaskValue) Reset()         { *m = TaskValue{} }
func (m *TaskValue) String() string { return proto.CompactTextString(m) }
func (*TaskValue) ProtoMessage()    {}
func (*TaskValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{1}
}

func (m *TaskValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskValue.Unmarshal(m, b)
}
func (m *TaskValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskValue.Marshal(b, m, deterministic)
}
func (m *TaskValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskValue.Merge(m, src)
}
func (m *TaskValue) XXX_Size() int {
	return xxx_messageInfo_TaskValue.Size(m)
}
func (m *TaskValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskValue.DiscardUnknown(m)
}

var xxx_messageInfo_TaskValue proto.InternalMessageInfo

func (m *TaskValue) GetVal() []byte {
	if m != nil {
		return m.Val
	}
	return nil
}

func (m *TaskValue) GetValType() Posting_ValType {
	if m != nil {
		return m.ValType
	}
	return Posting_DEFAULT
}

type SrcFunction struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Args                 []string `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	IsCount              bool     `protobuf:"varint,4,opt,name=isCount,proto3" json:"isCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrcFunction) Reset()         { *m = SrcFunction{} }
func (m *SrcFunction) String() string { return proto.CompactTextString(m) }
func (*SrcFunction) ProtoMessage()    {}
func (*SrcFunction) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{2}
}

func (m *SrcFunction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrcFunction.Unmarshal(m, b)
}
func (m *SrcFunction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrcFunction.Marshal(b, m, deterministic)
}
func (m *SrcFunction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrcFunction.Merge(m, src)
}
func (m *SrcFunction) XXX_Size() int {
	return xxx_messageInfo_SrcFunction.Size(m)
}
func (m *SrcFunction) XXX_DiscardUnknown() {
	xxx_messageInfo_SrcFunction.DiscardUnknown(m)
}

var xxx_messageInfo_SrcFunction proto.InternalMessageInfo

func (m *SrcFunction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SrcFunction) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *SrcFunction) GetIsCount() bool {
	if m != nil {
		return m.IsCount
	}
	return false
}

type Query struct {
	Attr     string   `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
	Langs    []string `protobuf:"bytes,2,rep,name=langs,proto3" json:"langs,omitempty"`
	AfterUid uint64   `protobuf:"fixed64,3,opt,name=after_uid,json=afterUid,proto3" json:"after_uid,omitempty"`
	DoCount  bool     `protobuf:"varint,4,opt,name=do_count,json=doCount,proto3" json:"do_count,omitempty"`
	// Exactly one of uids and terms is populated.
	UidList *List `protobuf:"bytes,5,opt,name=uid_list,json=uidList,proto3" json:"uid_list,omitempty"`
	// Function to generate or filter UIDs.
	SrcFunc              *SrcFunction `protobuf:"bytes,6,opt,name=src_func,json=srcFunc,proto3" json:"src_func,omitempty"`
	Reverse              bool         `protobuf:"varint,7,opt,name=reverse,proto3" json:"reverse,omitempty"`
	FacetParam           *FacetParams `protobuf:"bytes,8,opt,name=facet_param,json=facetParam,proto3" json:"facet_param,omitempty"`
	FacetsFilter         *FilterTree  `protobuf:"bytes,9,opt,name=facets_filter,json=facetsFilter,proto3" json:"facets_filter,omitempty"`
	ExpandAll            bool         `protobuf:"varint,10,opt,name=expand_all,json=expandAll,proto3" json:"expand_all,omitempty"`
	ReadTs               uint64       `protobuf:"varint,13,opt,name=read_ts,json=readTs,proto3" json:"read_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{3}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetAttr() string {
	if m != nil {
		return m.Attr
	}
	return ""
}

func (m *Query) GetLangs() []string {
	if m != nil {
		return m.Langs
	}
	return nil
}

func (m *Query) GetAfterUid() uint64 {
	if m != nil {
		return m.AfterUid
	}
	return 0
}

func (m *Query) GetDoCount() bool {
	if m != nil {
		return m.DoCount
	}
	return false
}

func (m *Query) GetUidList() *List {
	if m != nil {
		return m.UidList
	}
	return nil
}

func (m *Query) GetSrcFunc() *SrcFunction {
	if m != nil {
		return m.SrcFunc
	}
	return nil
}

func (m *Query) GetReverse() bool {
	if m != nil {
		return m.Reverse
	}
	return false
}

func (m *Query) GetFacetParam() *FacetParams {
	if m != nil {
		return m.FacetParam
	}
	return nil
}

func (m *Query) GetFacetsFilter() *FilterTree {
	if m != nil {
		return m.FacetsFilter
	}
	return nil
}

func (m *Query) GetExpandAll() bool {
	if m != nil {
		return m.ExpandAll
	}
	return false
}

func (m *Query) GetReadTs() uint64 {
	if m != nil {
		return m.ReadTs
	}
	return 0
}

type ValueList struct {
	Values               []*TaskValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ValueList) Reset()         { *m = ValueList{} }
func (m *ValueList) String() string { return proto.CompactTextString(m) }
func (*ValueList) ProtoMessage()    {}
func (*ValueList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{4}
}

func (m *ValueList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueList.Unmarshal(m, b)
}
func (m *ValueList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueList.Marshal(b, m, deterministic)
}
func (m *ValueList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueList.Merge(m, src)
}
func (m *ValueList) XXX_Size() int {
	return xxx_messageInfo_ValueList.Size(m)
}
func (m *ValueList) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueList.DiscardUnknown(m)
}

var xxx_messageInfo_ValueList proto.InternalMessageInfo

func (m *ValueList) GetValues() []*TaskValue {
	if m != nil {
		return m.Values
	}
	return nil
}

type LangList struct {
	Lang                 []string `protobuf:"bytes,1,rep,name=lang,proto3" json:"lang,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LangList) Reset()         { *m = LangList{} }
func (m *LangList) String() string { return proto.CompactTextString(m) }
func (*LangList) ProtoMessage()    {}
func (*LangList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{5}
}

func (m *LangList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LangList.Unmarshal(m, b)
}
func (m *LangList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LangList.Marshal(b, m, deterministic)
}
func (m *LangList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LangList.Merge(m, src)
}
func (m *LangList) XXX_Size() int {
	return xxx_messageInfo_LangList.Size(m)
}
func (m *LangList) XXX_DiscardUnknown() {
	xxx_messageInfo_LangList.DiscardUnknown(m)
}

var xxx_messageInfo_LangList proto.InternalMessageInfo

func (m *LangList) GetLang() []string {
	if m != nil {
		return m.Lang
	}
	return nil
}

type Result struct {
	UidMatrix            []*List       `protobuf:"bytes,1,rep,name=uid_matrix,json=uidMatrix,proto3" json:"uid_matrix,omitempty"`
	ValueMatrix          []*ValueList  `protobuf:"bytes,2,rep,name=value_matrix,json=valueMatrix,proto3" json:"value_matrix,omitempty"`
	Counts               []uint32      `protobuf:"varint,3,rep,packed,name=counts,proto3" json:"counts,omitempty"`
	IntersectDest        bool          `protobuf:"varint,4,opt,name=intersect_dest,json=intersectDest,proto3" json:"intersect_dest,omitempty"`
	FacetMatrix          []*FacetsList `protobuf:"bytes,5,rep,name=facet_matrix,json=facetMatrix,proto3" json:"facet_matrix,omitempty"`
	LangMatrix           []*LangList   `protobuf:"bytes,6,rep,name=lang_matrix,json=langMatrix,proto3" json:"lang_matrix,omitempty"`
	List                 bool          `protobuf:"varint,7,opt,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{6}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetUidMatrix() []*List {
	if m != nil {
		return m.UidMatrix
	}
	return nil
}

func (m *Result) GetValueMatrix() []*ValueList {
	if m != nil {
		return m.ValueMatrix
	}
	return nil
}

func (m *Result) GetCounts() []uint32 {
	if m != nil {
		return m.Counts
	}
	return nil
}

func (m *Result) GetIntersectDest() bool {
	if m != nil {
		return m.IntersectDest
	}
	return false
}

func (m *Result) GetFacetMatrix() []*FacetsList {
	if m != nil {
		return m.FacetMatrix
	}
	return nil
}

func (m *Result) GetLangMatrix() []*LangList {
	if m != nil {
		return m.LangMatrix
	}
	return nil
}

func (m *Result) GetList() bool {
	if m != nil {
		return m.List
	}
	return false
}

type Order struct {
	Attr                 string   `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
	Desc                 bool     `protobuf:"varint,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Langs                []string `protobuf:"bytes,3,rep,name=langs,proto3" json:"langs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{7}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetAttr() string {
	if m != nil {
		return m.Attr
	}
	return ""
}

func (m *Order) GetDesc() bool {
	if m != nil {
		return m.Desc
	}
	return false
}

func (m *Order) GetLangs() []string {
	if m != nil {
		return m.Langs
	}
	return nil
}

type SortMessage struct {
	Order                []*Order `protobuf:"bytes,1,rep,name=order,proto3" json:"order,omitempty"`
	UidMatrix            []*List  `protobuf:"bytes,2,rep,name=uid_matrix,json=uidMatrix,proto3" json:"uid_matrix,omitempty"`
	Count                int32    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Offset               int32    `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	ReadTs               uint64   `protobuf:"varint,13,opt,name=read_ts,json=readTs,proto3" json:"read_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SortMessage) Reset()         { *m = SortMessage{} }
func (m *SortMessage) String() string { return proto.CompactTextString(m) }
func (*SortMessage) ProtoMessage()    {}
func (*SortMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{8}
}

func (m *SortMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SortMessage.Unmarshal(m, b)
}
func (m *SortMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SortMessage.Marshal(b, m, deterministic)
}
func (m *SortMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SortMessage.Merge(m, src)
}
func (m *SortMessage) XXX_Size() int {
	return xxx_messageInfo_SortMessage.Size(m)
}
func (m *SortMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SortMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SortMessage proto.InternalMessageInfo

func (m *SortMessage) GetOrder() []*Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *SortMessage) GetUidMatrix() []*List {
	if m != nil {
		return m.UidMatrix
	}
	return nil
}

func (m *SortMessage) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SortMessage) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SortMessage) GetReadTs() uint64 {
	if m != nil {
		return m.ReadTs
	}
	return 0
}

type SortResult struct {
	UidMatrix            []*List  `protobuf:"bytes,1,rep,name=uid_matrix,json=uidMatrix,proto3" json:"uid_matrix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SortResult) Reset()         { *m = SortResult{} }
func (m *SortResult) String() string { return proto.CompactTextString(m) }
func (*SortResult) ProtoMessage()    {}
func (*SortResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{9}
}

func (m *SortResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SortResult.Unmarshal(m, b)
}
func (m *SortResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SortResult.Marshal(b, m, deterministic)
}
func (m *SortResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SortResult.Merge(m, src)
}
func (m *SortResult) XXX_Size() int {
	return xxx_messageInfo_SortResult.Size(m)
}
func (m *SortResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SortResult.DiscardUnknown(m)
}

var xxx_messageInfo_SortResult proto.InternalMessageInfo

func (m *SortResult) GetUidMatrix() []*List {
	if m != nil {
		return m.UidMatrix
	}
	return nil
}

type RaftContext struct {
	Id                   uint64   `protobuf:"fixed64,1,opt,name=id,proto3" json:"id,omitempty"`
	Group                uint32   `protobuf:"varint,2,opt,name=group,proto3" json:"group,omitempty"`
	Addr                 string   `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
	SnapshotTs           uint64   `protobuf:"varint,4,opt,name=snapshot_ts,json=snapshotTs,proto3" json:"snapshot_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RaftContext) Reset()         { *m = RaftContext{} }
func (m *RaftContext) String() string { return proto.CompactTextString(m) }
func (*RaftContext) ProtoMessage()    {}
func (*RaftContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{10}
}

func (m *RaftContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaftContext.Unmarshal(m, b)
}
func (m *RaftContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaftContext.Marshal(b, m, deterministic)
}
func (m *RaftContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaftContext.Merge(m, src)
}
func (m *RaftContext) XXX_Size() int {
	return xxx_messageInfo_RaftContext.Size(m)
}
func (m *RaftContext) XXX_DiscardUnknown() {
	xxx_messageInfo_RaftContext.DiscardUnknown(m)
}

var xxx_messageInfo_RaftContext proto.InternalMessageInfo

func (m *RaftContext) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RaftContext) GetGroup() uint32 {
	if m != nil {
		return m.Group
	}
	return 0
}

func (m *RaftContext) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *RaftContext) GetSnapshotTs() uint64 {
	if m != nil {
		return m.SnapshotTs
	}
	return 0
}

// Member stores information about RAFT group member for a single RAFT node.
// Note that each server can be serving multiple RAFT groups. Each group would have
// one RAFT node per server serving that group.
type Member struct {
	Id                   uint64   `protobuf:"fixed64,1,opt,name=id,proto3" json:"id,omitempty"`
	GroupId              uint32   `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Addr                 string   `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
	Leader               bool     `protobuf:"varint,4,opt,name=leader,proto3" json:"leader,omitempty"`
	AmDead               bool     `protobuf:"varint,5,opt,name=am_dead,json=amDead,proto3" json:"am_dead,omitempty"`
	LastUpdate           uint64   `protobuf:"varint,6,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	ClusterInfoOnly      bool     `protobuf:"varint,13,opt,name=cluster_info_only,json=clusterInfoOnly,proto3" json:"cluster_info_only,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Member) Reset()         { *m = Member{} }
func (m *Member) String() string { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()    {}
func (*Member) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{11}
}

func (m *Member) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Member.Unmarshal(m, b)
}
func (m *Member) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Member.Marshal(b, m, deterministic)
}
func (m *Member) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Member.Merge(m, src)
}
func (m *Member) XXX_Size() int {
	return xxx_messageInfo_Member.Size(m)
}
func (m *Member) XXX_DiscardUnknown() {
	xxx_messageInfo_Member.DiscardUnknown(m)
}

var xxx_messageInfo_Member proto.InternalMessageInfo

func (m *Member) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Member) GetGroupId() uint32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *Member) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *Member) GetLeader() bool {
	if m != nil {
		return m.Leader
	}
	return false
}

func (m *Member) GetAmDead() bool {
	if m != nil {
		return m.AmDead
	}
	return false
}

func (m *Member) GetLastUpdate() uint64 {
	if m != nil {
		return m.LastUpdate
	}
	return 0
}

func (m *Member) GetClusterInfoOnly() bool {
	if m != nil {
		return m.ClusterInfoOnly
	}
	return false
}

type Group struct {
	Members              map[uint64]*Member `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tablets              map[string]*Tablet `protobuf:"bytes,2,rep,name=tablets,proto3" json:"tablets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SnapshotTs           uint64             `protobuf:"varint,3,opt,name=snapshot_ts,json=snapshotTs,proto3" json:"snapshot_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{12}
}

func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (m *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(m, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetMembers() map[uint64]*Member {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Group) GetTablets() map[string]*Tablet {
	if m != nil {
		return m.Tablets
	}
	return nil
}

func (m *Group) GetSnapshotTs() uint64 {
	if m != nil {
		return m.SnapshotTs
	}
	return 0
}

type ZeroProposal struct {
	SnapshotTs           map[uint32]uint64 `protobuf:"bytes,1,rep,name=snapshot_ts,json=snapshotTs,proto3" json:"snapshot_ts,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Member               *Member           `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`
	Tablet               *Tablet           `protobuf:"bytes,3,opt,name=tablet,proto3" json:"tablet,omitempty"`
	MaxLeaseId           uint64            `protobuf:"varint,4,opt,name=maxLeaseId,proto3" json:"maxLeaseId,omitempty"`
	MaxTxnTs             uint64            `protobuf:"varint,5,opt,name=maxTxnTs,proto3" json:"maxTxnTs,omitempty"`
	MaxRaftId            uint64            `protobuf:"varint,6,opt,name=maxRaftId,proto3" json:"maxRaftId,omitempty"`
	Txn                  *api.TxnContext   `protobuf:"bytes,7,opt,name=txn,proto3" json:"txn,omitempty"`
	Key                  string            `protobuf:"bytes,8,opt,name=key,proto3" json:"key,omitempty"`
	Cid                  string            `protobuf:"bytes,9,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ZeroProposal) Reset()         { *m = ZeroProposal{} }
func (m *ZeroProposal) String() string { return proto.CompactTextString(m) }
func (*ZeroProposal) ProtoMessage()    {}
func (*ZeroProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{13}
}

func (m *ZeroProposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZeroProposal.Unmarshal(m, b)
}
func (m *ZeroProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZeroProposal.Marshal(b, m, deterministic)
}
func (m *ZeroProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZeroProposal.Merge(m, src)
}
func (m *ZeroProposal) XXX_Size() int {
	return xxx_messageInfo_ZeroProposal.Size(m)
}
func (m *ZeroProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_ZeroProposal.DiscardUnknown(m)
}

var xxx_messageInfo_ZeroProposal proto.InternalMessageInfo

func (m *ZeroProposal) GetSnapshotTs() map[uint32]uint64 {
	if m != nil {
		return m.SnapshotTs
	}
	return nil
}

func (m *ZeroProposal) GetMember() *Member {
	if m != nil {
		return m.Member
	}
	return nil
}

func (m *ZeroProposal) GetTablet() *Tablet {
	if m != nil {
		return m.Tablet
	}
	return nil
}

func (m *ZeroProposal) GetMaxLeaseId() uint64 {
	if m != nil {
		return m.MaxLeaseId
	}
	return 0
}

func (m *ZeroProposal) GetMaxTxnTs() uint64 {
	if m != nil {
		return m.MaxTxnTs
	}
	return 0
}

func (m *ZeroProposal) GetMaxRaftId() uint64 {
	if m != nil {
		return m.MaxRaftId
	}
	return 0
}

func (m *ZeroProposal) GetTxn() *api.TxnContext {
	if m != nil {
		return m.Txn
	}
	return nil
}

func (m *ZeroProposal) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ZeroProposal) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

// MembershipState is used to pack together the current membership state of all the nodes
// in the caller server; and the membership updates recorded by the callee server since
// the provided lastUpdate.
type MembershipState struct {
	Counter              uint64             `protobuf:"varint,1,opt,name=counter,proto3" json:"counter,omitempty"`
	Groups               map[uint32]*Group  `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Zeros                map[uint64]*Member `protobuf:"bytes,3,rep,name=zeros,proto3" json:"zeros,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MaxLeaseId           uint64             `protobuf:"varint,4,opt,name=maxLeaseId,proto3" json:"maxLeaseId,omitempty"`
	MaxTxnTs             uint64             `protobuf:"varint,5,opt,name=maxTxnTs,proto3" json:"maxTxnTs,omitempty"`
	MaxRaftId            uint64             `protobuf:"varint,6,opt,name=maxRaftId,proto3" json:"maxRaftId,omitempty"`
	Removed              []*Member          `protobuf:"bytes,7,rep,name=removed,proto3" json:"removed,omitempty"`
	Cid                  string             `protobuf:"bytes,8,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MembershipState) Reset()         { *m = MembershipState{} }
func (m *MembershipState) String() string { return proto.CompactTextString(m) }
func (*MembershipState) ProtoMessage()    {}
func (*MembershipState) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{14}
}

func (m *MembershipState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MembershipState.Unmarshal(m, b)
}
func (m *MembershipState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MembershipState.Marshal(b, m, deterministic)
}
func (m *MembershipState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MembershipState.Merge(m, src)
}
func (m *MembershipState) XXX_Size() int {
	return xxx_messageInfo_MembershipState.Size(m)
}
func (m *MembershipState) XXX_DiscardUnknown() {
	xxx_messageInfo_MembershipState.DiscardUnknown(m)
}

var xxx_messageInfo_MembershipState proto.InternalMessageInfo

func (m *MembershipState) GetCounter() uint64 {
	if m != nil {
		return m.Counter
	}
	return 0
}

func (m *MembershipState) GetGroups() map[uint32]*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *MembershipState) GetZeros() map[uint64]*Member {
	if m != nil {
		return m.Zeros
	}
	return nil
}

func (m *MembershipState) GetMaxLeaseId() uint64 {
	if m != nil {
		return m.MaxLeaseId
	}
	return 0
}

func (m *MembershipState) GetMaxTxnTs() uint64 {
	if m != nil {
		return m.MaxTxnTs
	}
	return 0
}

func (m *MembershipState) GetMaxRaftId() uint64 {
	if m != nil {
		return m.MaxRaftId
	}
	return 0
}

func (m *MembershipState) GetRemoved() []*Member {
	if m != nil {
		return m.Removed
	}
	return nil
}

func (m *MembershipState) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

type ConnectionState struct {
	Member               *Member          `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	State                *MembershipState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	MaxPending           uint64           `protobuf:"varint,3,opt,name=max_pending,json=maxPending,proto3" json:"max_pending,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ConnectionState) Reset()         { *m = ConnectionState{} }
func (m *ConnectionState) String() string { return proto.CompactTextString(m) }
func (*ConnectionState) ProtoMessage()    {}
func (*ConnectionState) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{15}
}

func (m *ConnectionState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionState.Unmarshal(m, b)
}
func (m *ConnectionState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionState.Marshal(b, m, deterministic)
}
func (m *ConnectionState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionState.Merge(m, src)
}
func (m *ConnectionState) XXX_Size() int {
	return xxx_messageInfo_ConnectionState.Size(m)
}
func (m *ConnectionState) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionState.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionState proto.InternalMessageInfo

func (m *ConnectionState) GetMember() *Member {
	if m != nil {
		return m.Member
	}
	return nil
}

func (m *ConnectionState) GetState() *MembershipState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *ConnectionState) GetMaxPending() uint64 {
	if m != nil {
		return m.MaxPending
	}
	return 0
}

type Tablet struct {
	GroupId              uint32   `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Predicate            string   `protobuf:"bytes,2,opt,name=predicate,proto3" json:"predicate,omitempty"`
	Force                bool     `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
	Space                int64    `protobuf:"varint,7,opt,name=space,proto3" json:"space,omitempty"`
	Remove               bool     `protobuf:"varint,8,opt,name=remove,proto3" json:"remove,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tablet) Reset()         { *m = Tablet{} }
func (m *Tablet) String() string { return proto.CompactTextString(m) }
func (*Tablet) ProtoMessage()    {}
func (*Tablet) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{16}
}

func (m *Tablet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tablet.Unmarshal(m, b)
}
func (m *Tablet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tablet.Marshal(b, m, deterministic)
}
func (m *Tablet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tablet.Merge(m, src)
}
func (m *Tablet) XXX_Size() int {
	return xxx_messageInfo_Tablet.Size(m)
}
func (m *Tablet) XXX_DiscardUnknown() {
	xxx_messageInfo_Tablet.DiscardUnknown(m)
}

var xxx_messageInfo_Tablet proto.InternalMessageInfo

func (m *Tablet) GetGroupId() uint32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *Tablet) GetPredicate() string {
	if m != nil {
		return m.Predicate
	}
	return ""
}

func (m *Tablet) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *Tablet) GetSpace() int64 {
	if m != nil {
		return m.Space
	}
	return 0
}

func (m *Tablet) GetRemove() bool {
	if m != nil {
		return m.Remove
	}
	return false
}

type DirectedEdge struct {
	Entity               uint64          `protobuf:"fixed64,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Attr                 string          `protobuf:"bytes,2,opt,name=attr,proto3" json:"attr,omitempty"`
	Value                []byte          `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	ValueType            Posting_ValType `protobuf:"varint,4,opt,name=value_type,json=valueType,proto3,enum=pb.Posting_ValType" json:"value_type,omitempty"`
	ValueId              uint64          `protobuf:"fixed64,5,opt,name=value_id,json=valueId,proto3" json:"value_id,omitempty"`
	Label                string          `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	Lang                 string          `protobuf:"bytes,7,opt,name=lang,proto3" json:"lang,omitempty"`
	Op                   DirectedEdge_Op `protobuf:"varint,8,opt,name=op,proto3,enum=pb.DirectedEdge_Op" json:"op,omitempty"`
	Facets               []*api.Facet    `protobuf:"bytes,9,rep,name=facets,proto3" json:"facets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DirectedEdge) Reset()         { *m = DirectedEdge{} }
func (m *DirectedEdge) String() string { return proto.CompactTextString(m) }
func (*DirectedEdge) ProtoMessage()    {}
func (*DirectedEdge) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{17}
}

func (m *DirectedEdge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectedEdge.Unmarshal(m, b)
}
func (m *DirectedEdge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectedEdge.Marshal(b, m, deterministic)
}
func (m *DirectedEdge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectedEdge.Merge(m, src)
}
func (m *DirectedEdge) XXX_Size() int {
	return xxx_messageInfo_DirectedEdge.Size(m)
}
func (m *DirectedEdge) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectedEdge.DiscardUnknown(m)
}

var xxx_messageInfo_DirectedEdge proto.InternalMessageInfo

func (m *DirectedEdge) GetEntity() uint64 {
	if m != nil {
		return m.Entity
	}
	return 0
}

func (m *DirectedEdge) GetAttr() string {
	if m != nil {
		return m.Attr
	}
	return ""
}

func (m *DirectedEdge) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *DirectedEdge) GetValueType() Posting_ValType {
	if m != nil {
		return m.ValueType
	}
	return Posting_DEFAULT
}

func (m *DirectedEdge) GetValueId() uint64 {
	if m != nil {
		return m.ValueId
	}
	return 0
}

func (m *DirectedEdge) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *DirectedEdge) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

func (m *DirectedEdge) GetOp() DirectedEdge_Op {
	if m != nil {
		return m.Op
	}
	return DirectedEdge_SET
}

func (m *DirectedEdge) GetFacets() []*api.Facet {
	if m != nil {
		return m.Facets
	}
	return nil
}

type Mutations struct {
	GroupId              uint32          `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	StartTs              uint64          `protobuf:"varint,2,opt,name=start_ts,json=startTs,proto3" json:"start_ts,omitempty"`
	Edges                []*DirectedEdge `protobuf:"bytes,3,rep,name=edges,proto3" json:"edges,omitempty"`
	Schema               []*SchemaUpdate `protobuf:"bytes,4,rep,name=schema,proto3" json:"schema,omitempty"`
	DropAll              bool            `protobuf:"varint,5,opt,name=drop_all,json=dropAll,proto3" json:"drop_all,omitempty"`
	IgnoreIndexConflict  bool            `protobuf:"varint,6,opt,name=ignore_index_conflict,json=ignoreIndexConflict,proto3" json:"ignore_index_conflict,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Mutations) Reset()         { *m = Mutations{} }
func (m *Mutations) String() string { return proto.CompactTextString(m) }
func (*Mutations) ProtoMessage()    {}
func (*Mutations) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{18}
}

func (m *Mutations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mutations.Unmarshal(m, b)
}
func (m *Mutations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mutations.Marshal(b, m, deterministic)
}
func (m *Mutations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mutations.Merge(m, src)
}
func (m *Mutations) XXX_Size() int {
	return xxx_messageInfo_Mutations.Size(m)
}
func (m *Mutations) XXX_DiscardUnknown() {
	xxx_messageInfo_Mutations.DiscardUnknown(m)
}

var xxx_messageInfo_Mutations proto.InternalMessageInfo

func (m *Mutations) GetGroupId() uint32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *Mutations) GetStartTs() uint64 {
	if m != nil {
		return m.StartTs
	}
	return 0
}

func (m *Mutations) GetEdges() []*DirectedEdge {
	if m != nil {
		return m.Edges
	}
	return nil
}

func (m *Mutations) GetSchema() []*SchemaUpdate {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *Mutations) GetDropAll() bool {
	if m != nil {
		return m.DropAll
	}
	return false
}

func (m *Mutations) GetIgnoreIndexConflict() bool {
	if m != nil {
		return m.IgnoreIndexConflict
	}
	return false
}

type Snapshot struct {
	Context *RaftContext `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Index   uint64       `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	ReadTs  uint64       `protobuf:"varint,3,opt,name=read_ts,json=readTs,proto3" json:"read_ts,omitempty"`
	// done is used to indicate that snapshot stream was a success.
	Done                 bool     `protobuf:"varint,4,opt,name=done,proto3" json:"done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Snapshot) Reset()         { *m = Snapshot{} }
func (m *Snapshot) String() string { return proto.CompactTextString(m) }
func (*Snapshot) ProtoMessage()    {}
func (*Snapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{19}
}

func (m *Snapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Snapshot.Unmarshal(m, b)
}
func (m *Snapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Snapshot.Marshal(b, m, deterministic)
}
func (m *Snapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Snapshot.Merge(m, src)
}
func (m *Snapshot) XXX_Size() int {
	return xxx_messageInfo_Snapshot.Size(m)
}
func (m *Snapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_Snapshot.DiscardUnknown(m)
}

var xxx_messageInfo_Snapshot proto.InternalMessageInfo

func (m *Snapshot) GetContext() *RaftContext {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Snapshot) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Snapshot) GetReadTs() uint64 {
	if m != nil {
		return m.ReadTs
	}
	return 0
}

func (m *Snapshot) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

type Proposal struct {
	Mutations            *Mutations       `protobuf:"bytes,2,opt,name=mutations,proto3" json:"mutations,omitempty"`
	Kv                   []*pb.KV         `protobuf:"bytes,4,rep,name=kv,proto3" json:"kv,omitempty"`
	State                *MembershipState `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	CleanPredicate       string           `protobuf:"bytes,6,opt,name=clean_predicate,json=cleanPredicate,proto3" json:"clean_predicate,omitempty"`
	Key                  string           `protobuf:"bytes,7,opt,name=key,proto3" json:"key,omitempty"`
	Delta                *OracleDelta     `protobuf:"bytes,8,opt,name=delta,proto3" json:"delta,omitempty"`
	Snapshot             *Snapshot        `protobuf:"bytes,9,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	Index                uint64           `protobuf:"varint,10,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Proposal) Reset()         { *m = Proposal{} }
func (m *Proposal) String() string { return proto.CompactTextString(m) }
func (*Proposal) ProtoMessage()    {}
func (*Proposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{20}
}

func (m *Proposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Proposal.Unmarshal(m, b)
}
func (m *Proposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Proposal.Marshal(b, m, deterministic)
}
func (m *Proposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Proposal.Merge(m, src)
}
func (m *Proposal) XXX_Size() int {
	return xxx_messageInfo_Proposal.Size(m)
}
func (m *Proposal) XXX_DiscardUnknown() {
	xxx_messageInfo_Proposal.DiscardUnknown(m)
}

var xxx_messageInfo_Proposal proto.InternalMessageInfo

func (m *Proposal) GetMutations() *Mutations {
	if m != nil {
		return m.Mutations
	}
	return nil
}

func (m *Proposal) GetKv() []*pb.KV {
	if m != nil {
		return m.Kv
	}
	return nil
}

func (m *Proposal) GetState() *MembershipState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *Proposal) GetCleanPredicate() string {
	if m != nil {
		return m.CleanPredicate
	}
	return ""
}

func (m *Proposal) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Proposal) GetDelta() *OracleDelta {
	if m != nil {
		return m.Delta
	}
	return nil
}

func (m *Proposal) GetSnapshot() *Snapshot {
	if m != nil {
		return m.Snapshot
	}
	return nil
}

func (m *Proposal) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type KVS struct {
	Kv []*pb.KV `protobuf:"bytes,1,rep,name=kv,proto3" json:"kv,omitempty"`
	// done used to indicate if the stream of KVS is over.
	Done                 bool     `protobuf:"varint,2,opt,name=done,proto3" json:"done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KVS) Reset()         { *m = KVS{} }
func (m *KVS) String() string { return proto.CompactTextString(m) }
func (*KVS) ProtoMessage()    {}
func (*KVS) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{21}
}

func (m *KVS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KVS.Unmarshal(m, b)
}
func (m *KVS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KVS.Marshal(b, m, deterministic)
}
func (m *KVS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KVS.Merge(m, src)
}
func (m *KVS) XXX_Size() int {
	return xxx_messageInfo_KVS.Size(m)
}
func (m *KVS) XXX_DiscardUnknown() {
	xxx_messageInfo_KVS.DiscardUnknown(m)
}

var xxx_messageInfo_KVS proto.InternalMessageInfo

func (m *KVS) GetKv() []*pb.KV {
	if m != nil {
		return m.Kv
	}
	return nil
}

func (m *KVS) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

// Posting messages.
type Posting struct {
	Uid         uint64              `protobuf:"fixed64,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Value       []byte              `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	ValType     Posting_ValType     `protobuf:"varint,3,opt,name=val_type,json=valType,proto3,enum=pb.Posting_ValType" json:"val_type,omitempty"`
	PostingType Posting_PostingType `protobuf:"varint,4,opt,name=posting_type,json=postingType,proto3,enum=pb.Posting_PostingType" json:"posting_type,omitempty"`
	LangTag     []byte              `protobuf:"bytes,5,opt,name=lang_tag,json=langTag,proto3" json:"lang_tag,omitempty"`
	Label       string              `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	Facets      []*api.Facet        `protobuf:"bytes,9,rep,name=facets,proto3" json:"facets,omitempty"`
	// TODO: op is only used temporarily. See if we can remove it from here.
	Op                   uint32   `protobuf:"varint,12,opt,name=op,proto3" json:"op,omitempty"`
	StartTs              uint64   `protobuf:"varint,13,opt,name=start_ts,json=startTs,proto3" json:"start_ts,omitempty"`
	CommitTs             uint64   `protobuf:"varint,14,opt,name=commit_ts,json=commitTs,proto3" json:"commit_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Posting) Reset()         { *m = Posting{} }
func (m *Posting) String() string { return proto.CompactTextString(m) }
func (*Posting) ProtoMessage()    {}
func (*Posting) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{22}
}

func (m *Posting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Posting.Unmarshal(m, b)
}
func (m *Posting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Posting.Marshal(b, m, deterministic)
}
func (m *Posting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Posting.Merge(m, src)
}
func (m *Posting) XXX_Size() int {
	return xxx_messageInfo_Posting.Size(m)
}
func (m *Posting) XXX_DiscardUnknown() {
	xxx_messageInfo_Posting.DiscardUnknown(m)
}

var xxx_messageInfo_Posting proto.InternalMessageInfo

func (m *Posting) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *Posting) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Posting) GetValType() Posting_ValType {
	if m != nil {
		return m.ValType
	}
	return Posting_DEFAULT
}

func (m *Posting) GetPostingType() Posting_PostingType {
	if m != nil {
		return m.PostingType
	}
	return Posting_REF
}

func (m *Posting) GetLangTag() []byte {
	if m != nil {
		return m.LangTag
	}
	return nil
}

func (m *Posting) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Posting) GetFacets() []*api.Facet {
	if m != nil {
		return m.Facets
	}
	return nil
}

func (m *Posting) GetOp() uint32 {
	if m != nil {
		return m.Op
	}
	return 0
}

func (m *Posting) GetStartTs() uint64 {
	if m != nil {
		return m.StartTs
	}
	return 0
}

func (m *Posting) GetCommitTs() uint64 {
	if m != nil {
		return m.CommitTs
	}
	return 0
}

type UidBlock struct {
	Base uint64 `protobuf:"varint,1,opt,name=base,proto3" json:"base,omitempty"`
	// deltas contains the deltas encoded with Varints. We don't store deltas as a list of integers,
	// because when the PB is brought to memory, Go would always use 8-bytes per integer. Instead,
	// storing it as a byte slice is a lot cheaper in memory.
	Deltas               []byte   `protobuf:"bytes,2,opt,name=deltas,proto3" json:"deltas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UidBlock) Reset()         { *m = UidBlock{} }
func (m *UidBlock) String() string { return proto.CompactTextString(m) }
func (*UidBlock) ProtoMessage()    {}
func (*UidBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{23}
}

func (m *UidBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UidBlock.Unmarshal(m, b)
}
func (m *UidBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UidBlock.Marshal(b, m, deterministic)
}
func (m *UidBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UidBlock.Merge(m, src)
}
func (m *UidBlock) XXX_Size() int {
	return xxx_messageInfo_UidBlock.Size(m)
}
func (m *UidBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_UidBlock.DiscardUnknown(m)
}

var xxx_messageInfo_UidBlock proto.InternalMessageInfo

func (m *UidBlock) GetBase() uint64 {
	if m != nil {
		return m.Base
	}
	return 0
}

func (m *UidBlock) GetDeltas() []byte {
	if m != nil {
		return m.Deltas
	}
	return nil
}

type UidPack struct {
	BlockSize            uint32      `protobuf:"varint,1,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	Blocks               []*UidBlock `protobuf:"bytes,2,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UidPack) Reset()         { *m = UidPack{} }
func (m *UidPack) String() string { return proto.CompactTextString(m) }
func (*UidPack) ProtoMessage()    {}
func (*UidPack) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{24}
}

func (m *UidPack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UidPack.Unmarshal(m, b)
}
func (m *UidPack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UidPack.Marshal(b, m, deterministic)
}
func (m *UidPack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UidPack.Merge(m, src)
}
func (m *UidPack) XXX_Size() int {
	return xxx_messageInfo_UidPack.Size(m)
}
func (m *UidPack) XXX_DiscardUnknown() {
	xxx_messageInfo_UidPack.DiscardUnknown(m)
}

var xxx_messageInfo_UidPack proto.InternalMessageInfo

func (m *UidPack) GetBlockSize() uint32 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *UidPack) GetBlocks() []*UidBlock {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type PostingList struct {
	Pack                 *UidPack   `protobuf:"bytes,1,opt,name=pack,proto3" json:"pack,omitempty"`
	Postings             []*Posting `protobuf:"bytes,2,rep,name=postings,proto3" json:"postings,omitempty"`
	CommitTs             uint64     `protobuf:"varint,3,opt,name=commit_ts,json=commitTs,proto3" json:"commit_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PostingList) Reset()         { *m = PostingList{} }
func (m *PostingList) String() string { return proto.CompactTextString(m) }
func (*PostingList) ProtoMessage()    {}
func (*PostingList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{25}
}

func (m *PostingList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostingList.Unmarshal(m, b)
}
func (m *PostingList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostingList.Marshal(b, m, deterministic)
}
func (m *PostingList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostingList.Merge(m, src)
}
func (m *PostingList) XXX_Size() int {
	return xxx_messageInfo_PostingList.Size(m)
}
func (m *PostingList) XXX_DiscardUnknown() {
	xxx_messageInfo_PostingList.DiscardUnknown(m)
}

var xxx_messageInfo_PostingList proto.InternalMessageInfo

func (m *PostingList) GetPack() *UidPack {
	if m != nil {
		return m.Pack
	}
	return nil
}

func (m *PostingList) GetPostings() []*Posting {
	if m != nil {
		return m.Postings
	}
	return nil
}

func (m *PostingList) GetCommitTs() uint64 {
	if m != nil {
		return m.CommitTs
	}
	return 0
}

type FacetParam struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Alias                string   `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FacetParam) Reset()         { *m = FacetParam{} }
func (m *FacetParam) String() string { return proto.CompactTextString(m) }
func (*FacetParam) ProtoMessage()    {}
func (*FacetParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{26}
}

func (m *FacetParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FacetParam.Unmarshal(m, b)
}
func (m *FacetParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FacetParam.Marshal(b, m, deterministic)
}
func (m *FacetParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FacetParam.Merge(m, src)
}
func (m *FacetParam) XXX_Size() int {
	return xxx_messageInfo_FacetParam.Size(m)
}
func (m *FacetParam) XXX_DiscardUnknown() {
	xxx_messageInfo_FacetParam.DiscardUnknown(m)
}

var xxx_messageInfo_FacetParam proto.InternalMessageInfo

func (m *FacetParam) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *FacetParam) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type FacetParams struct {
	AllKeys              bool          `protobuf:"varint,1,opt,name=all_keys,json=allKeys,proto3" json:"all_keys,omitempty"`
	Param                []*FacetParam `protobuf:"bytes,2,rep,name=param,proto3" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FacetParams) Reset()         { *m = FacetParams{} }
func (m *FacetParams) String() string { return proto.CompactTextString(m) }
func (*FacetParams) ProtoMessage()    {}
func (*FacetParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{27}
}

func (m *FacetParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FacetParams.Unmarshal(m, b)
}
func (m *FacetParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FacetParams.Marshal(b, m, deterministic)
}
func (m *FacetParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FacetParams.Merge(m, src)
}
func (m *FacetParams) XXX_Size() int {
	return xxx_messageInfo_FacetParams.Size(m)
}
func (m *FacetParams) XXX_DiscardUnknown() {
	xxx_messageInfo_FacetParams.DiscardUnknown(m)
}

var xxx_messageInfo_FacetParams proto.InternalMessageInfo

func (m *FacetParams) GetAllKeys() bool {
	if m != nil {
		return m.AllKeys
	}
	return false
}

func (m *FacetParams) GetParam() []*FacetParam {
	if m != nil {
		return m.Param
	}
	return nil
}

type Facets struct {
	Facets               []*api.Facet `protobuf:"bytes,1,rep,name=facets,proto3" json:"facets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Facets) Reset()         { *m = Facets{} }
func (m *Facets) String() string { return proto.CompactTextString(m) }
func (*Facets) ProtoMessage()    {}
func (*Facets) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{28}
}

func (m *Facets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Facets.Unmarshal(m, b)
}
func (m *Facets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Facets.Marshal(b, m, deterministic)
}
func (m *Facets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Facets.Merge(m, src)
}
func (m *Facets) XXX_Size() int {
	return xxx_messageInfo_Facets.Size(m)
}
func (m *Facets) XXX_DiscardUnknown() {
	xxx_messageInfo_Facets.DiscardUnknown(m)
}

var xxx_messageInfo_Facets proto.InternalMessageInfo

func (m *Facets) GetFacets() []*api.Facet {
	if m != nil {
		return m.Facets
	}
	return nil
}

type FacetsList struct {
	FacetsList           []*Facets `protobuf:"bytes,1,rep,name=facets_list,json=facetsList,proto3" json:"facets_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *FacetsList) Reset()         { *m = FacetsList{} }
func (m *FacetsList) String() string { return proto.CompactTextString(m) }
func (*FacetsList) ProtoMessage()    {}
func (*FacetsList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{29}
}

func (m *FacetsList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FacetsList.Unmarshal(m, b)
}
func (m *FacetsList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FacetsList.Marshal(b, m, deterministic)
}
func (m *FacetsList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FacetsList.Merge(m, src)
}
func (m *FacetsList) XXX_Size() int {
	return xxx_messageInfo_FacetsList.Size(m)
}
func (m *FacetsList) XXX_DiscardUnknown() {
	xxx_messageInfo_FacetsList.DiscardUnknown(m)
}

var xxx_messageInfo_FacetsList proto.InternalMessageInfo

func (m *FacetsList) GetFacetsList() []*Facets {
	if m != nil {
		return m.FacetsList
	}
	return nil
}

type Function struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Args                 []string `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Function) Reset()         { *m = Function{} }
func (m *Function) String() string { return proto.CompactTextString(m) }
func (*Function) ProtoMessage()    {}
func (*Function) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{30}
}

func (m *Function) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Function.Unmarshal(m, b)
}
func (m *Function) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Function.Marshal(b, m, deterministic)
}
func (m *Function) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Function.Merge(m, src)
}
func (m *Function) XXX_Size() int {
	return xxx_messageInfo_Function.Size(m)
}
func (m *Function) XXX_DiscardUnknown() {
	xxx_messageInfo_Function.DiscardUnknown(m)
}

var xxx_messageInfo_Function proto.InternalMessageInfo

func (m *Function) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Function) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Function) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

// Op and Children are internal nodes and Func on leaves.
type FilterTree struct {
	Op                   string        `protobuf:"bytes,1,opt,name=op,proto3" json:"op,omitempty"`
	Children             []*FilterTree `protobuf:"bytes,2,rep,name=children,proto3" json:"children,omitempty"`
	Func                 *Function     `protobuf:"bytes,3,opt,name=func,proto3" json:"func,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FilterTree) Reset()         { *m = FilterTree{} }
func (m *FilterTree) String() string { return proto.CompactTextString(m) }
func (*FilterTree) ProtoMessage()    {}
func (*FilterTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{31}
}

func (m *FilterTree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterTree.Unmarshal(m, b)
}
func (m *FilterTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterTree.Marshal(b, m, deterministic)
}
func (m *FilterTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterTree.Merge(m, src)
}
func (m *FilterTree) XXX_Size() int {
	return xxx_messageInfo_FilterTree.Size(m)
}
func (m *FilterTree) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterTree.DiscardUnknown(m)
}

var xxx_messageInfo_FilterTree proto.InternalMessageInfo

func (m *FilterTree) GetOp() string {
	if m != nil {
		return m.Op
	}
	return ""
}

func (m *FilterTree) GetChildren() []*FilterTree {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *FilterTree) GetFunc() *Function {
	if m != nil {
		return m.Func
	}
	return nil
}

// Schema messages.
type SchemaRequest struct {
	GroupId    uint32   `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Predicates []string `protobuf:"bytes,2,rep,name=predicates,proto3" json:"predicates,omitempty"`
	// fields can be on of type, index, reverse or tokenizer
	Fields               []string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SchemaRequest) Reset()         { *m = SchemaRequest{} }
func (m *SchemaRequest) String() string { return proto.CompactTextString(m) }
func (*SchemaRequest) ProtoMessage()    {}
func (*SchemaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{32}
}

func (m *SchemaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchemaRequest.Unmarshal(m, b)
}
func (m *SchemaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchemaRequest.Marshal(b, m, deterministic)
}
func (m *SchemaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchemaRequest.Merge(m, src)
}
func (m *SchemaRequest) XXX_Size() int {
	return xxx_messageInfo_SchemaRequest.Size(m)
}
func (m *SchemaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SchemaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SchemaRequest proto.InternalMessageInfo

func (m *SchemaRequest) GetGroupId() uint32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *SchemaRequest) GetPredicates() []string {
	if m != nil {
		return m.Predicates
	}
	return nil
}

func (m *SchemaRequest) GetFields() []string {
	if m != nil {
		return m.Fields
	}
	return nil
}

type SchemaResult struct {
	Schema               []*api.SchemaNode `protobuf:"bytes,1,rep,name=schema,proto3" json:"schema,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SchemaResult) Reset()         { *m = SchemaResult{} }
func (m *SchemaResult) String() string { return proto.CompactTextString(m) }
func (*SchemaResult) ProtoMessage()    {}
func (*SchemaResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{33}
}

func (m *SchemaResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchemaResult.Unmarshal(m, b)
}
func (m *SchemaResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchemaResult.Marshal(b, m, deterministic)
}
func (m *SchemaResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchemaResult.Merge(m, src)
}
func (m *SchemaResult) XXX_Size() int {
	return xxx_messageInfo_SchemaResult.Size(m)
}
func (m *SchemaResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SchemaResult.DiscardUnknown(m)
}

var xxx_messageInfo_SchemaResult proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *SchemaResult) GetSchema() []*api.SchemaNode {
	if m != nil {
		return m.Schema
	}
	return nil
}

type SchemaUpdate struct {
	Predicate            string                 `protobuf:"bytes,1,opt,name=predicate,proto3" json:"predicate,omitempty"`
	ValueType            Posting_ValType        `protobuf:"varint,2,opt,name=value_type,json=valueType,proto3,enum=pb.Posting_ValType" json:"value_type,omitempty"`
	Directive            SchemaUpdate_Directive `protobuf:"varint,3,opt,name=directive,proto3,enum=pb.SchemaUpdate_Directive" json:"directive,omitempty"`
	Tokenizer            []string               `protobuf:"bytes,4,rep,name=tokenizer,proto3" json:"tokenizer,omitempty"`
	Count                bool                   `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	List                 bool                   `protobuf:"varint,6,opt,name=list,proto3" json:"list,omitempty"`
	Upsert               bool                   `protobuf:"varint,8,opt,name=upsert,proto3" json:"upsert,omitempty"`
	Lang                 bool                   `protobuf:"varint,9,opt,name=lang,proto3" json:"lang,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SchemaUpdate) Reset()         { *m = SchemaUpdate{} }
func (m *SchemaUpdate) String() string { return proto.CompactTextString(m) }
func (*SchemaUpdate) ProtoMessage()    {}
func (*SchemaUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{34}
}

func (m *SchemaUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchemaUpdate.Unmarshal(m, b)
}
func (m *SchemaUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchemaUpdate.Marshal(b, m, deterministic)
}
func (m *SchemaUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchemaUpdate.Merge(m, src)
}
func (m *SchemaUpdate) XXX_Size() int {
	return xxx_messageInfo_SchemaUpdate.Size(m)
}
func (m *SchemaUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_SchemaUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_SchemaUpdate proto.InternalMessageInfo

func (m *SchemaUpdate) GetPredicate() string {
	if m != nil {
		return m.Predicate
	}
	return ""
}

func (m *SchemaUpdate) GetValueType() Posting_ValType {
	if m != nil {
		return m.ValueType
	}
	return Posting_DEFAULT
}

func (m *SchemaUpdate) GetDirective() SchemaUpdate_Directive {
	if m != nil {
		return m.Directive
	}
	return SchemaUpdate_NONE
}

func (m *SchemaUpdate) GetTokenizer() []string {
	if m != nil {
		return m.Tokenizer
	}
	return nil
}

func (m *SchemaUpdate) GetCount() bool {
	if m != nil {
		return m.Count
	}
	return false
}

func (m *SchemaUpdate) GetList() bool {
	if m != nil {
		return m.List
	}
	return false
}

func (m *SchemaUpdate) GetUpsert() bool {
	if m != nil {
		return m.Upsert
	}
	return false
}

func (m *SchemaUpdate) GetLang() bool {
	if m != nil {
		return m.Lang
	}
	return false
}

// Bulk loader proto.
type MapEntry struct {
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Only one should be set.
	Uid                  uint64   `protobuf:"fixed64,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Posting              *Posting `protobuf:"bytes,3,opt,name=posting,proto3" json:"posting,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MapEntry) Reset()         { *m = MapEntry{} }
func (m *MapEntry) String() string { return proto.CompactTextString(m) }
func (*MapEntry) ProtoMessage()    {}
func (*MapEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{35}
}

func (m *MapEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapEntry.Unmarshal(m, b)
}
func (m *MapEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapEntry.Marshal(b, m, deterministic)
}
func (m *MapEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapEntry.Merge(m, src)
}
func (m *MapEntry) XXX_Size() int {
	return xxx_messageInfo_MapEntry.Size(m)
}
func (m *MapEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_MapEntry.DiscardUnknown(m)
}

var xxx_messageInfo_MapEntry proto.InternalMessageInfo

func (m *MapEntry) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *MapEntry) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *MapEntry) GetPosting() *Posting {
	if m != nil {
		return m.Posting
	}
	return nil
}

type MovePredicatePayload struct {
	Predicate            string   `protobuf:"bytes,1,opt,name=predicate,proto3" json:"predicate,omitempty"`
	SourceGid            uint32   `protobuf:"varint,2,opt,name=source_gid,json=sourceGid,proto3" json:"source_gid,omitempty"`
	DestGid              uint32   `protobuf:"varint,3,opt,name=dest_gid,json=destGid,proto3" json:"dest_gid,omitempty"`
	TxnTs                uint64   `protobuf:"varint,4,opt,name=txn_ts,json=txnTs,proto3" json:"txn_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MovePredicatePayload) Reset()         { *m = MovePredicatePayload{} }
func (m *MovePredicatePayload) String() string { return proto.CompactTextString(m) }
func (*MovePredicatePayload) ProtoMessage()    {}
func (*MovePredicatePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{36}
}

func (m *MovePredicatePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MovePredicatePayload.Unmarshal(m, b)
}
func (m *MovePredicatePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MovePredicatePayload.Marshal(b, m, deterministic)
}
func (m *MovePredicatePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MovePredicatePayload.Merge(m, src)
}
func (m *MovePredicatePayload) XXX_Size() int {
	return xxx_messageInfo_MovePredicatePayload.Size(m)
}
func (m *MovePredicatePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_MovePredicatePayload.DiscardUnknown(m)
}

var xxx_messageInfo_MovePredicatePayload proto.InternalMessageInfo

func (m *MovePredicatePayload) GetPredicate() string {
	if m != nil {
		return m.Predicate
	}
	return ""
}

func (m *MovePredicatePayload) GetSourceGid() uint32 {
	if m != nil {
		return m.SourceGid
	}
	return 0
}

func (m *MovePredicatePayload) GetDestGid() uint32 {
	if m != nil {
		return m.DestGid
	}
	return 0
}

func (m *MovePredicatePayload) GetTxnTs() uint64 {
	if m != nil {
		return m.TxnTs
	}
	return 0
}

type TxnStatus struct {
	StartTs              uint64   `protobuf:"varint,1,opt,name=start_ts,json=startTs,proto3" json:"start_ts,omitempty"`
	CommitTs             uint64   `protobuf:"varint,2,opt,name=commit_ts,json=commitTs,proto3" json:"commit_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxnStatus) Reset()         { *m = TxnStatus{} }
func (m *TxnStatus) String() string { return proto.CompactTextString(m) }
func (*TxnStatus) ProtoMessage()    {}
func (*TxnStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{37}
}

func (m *TxnStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxnStatus.Unmarshal(m, b)
}
func (m *TxnStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxnStatus.Marshal(b, m, deterministic)
}
func (m *TxnStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxnStatus.Merge(m, src)
}
func (m *TxnStatus) XXX_Size() int {
	return xxx_messageInfo_TxnStatus.Size(m)
}
func (m *TxnStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_TxnStatus.DiscardUnknown(m)
}

var xxx_messageInfo_TxnStatus proto.InternalMessageInfo

func (m *TxnStatus) GetStartTs() uint64 {
	if m != nil {
		return m.StartTs
	}
	return 0
}

func (m *TxnStatus) GetCommitTs() uint64 {
	if m != nil {
		return m.CommitTs
	}
	return 0
}

type OracleDelta struct {
	Txns                 []*TxnStatus `protobuf:"bytes,1,rep,name=txns,proto3" json:"txns,omitempty"`
	MaxAssigned          uint64       `protobuf:"varint,2,opt,name=max_assigned,json=maxAssigned,proto3" json:"max_assigned,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *OracleDelta) Reset()         { *m = OracleDelta{} }
func (m *OracleDelta) String() string { return proto.CompactTextString(m) }
func (*OracleDelta) ProtoMessage()    {}
func (*OracleDelta) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{38}
}

func (m *OracleDelta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OracleDelta.Unmarshal(m, b)
}
func (m *OracleDelta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OracleDelta.Marshal(b, m, deterministic)
}
func (m *OracleDelta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OracleDelta.Merge(m, src)
}
func (m *OracleDelta) XXX_Size() int {
	return xxx_messageInfo_OracleDelta.Size(m)
}
func (m *OracleDelta) XXX_DiscardUnknown() {
	xxx_messageInfo_OracleDelta.DiscardUnknown(m)
}

var xxx_messageInfo_OracleDelta proto.InternalMessageInfo

func (m *OracleDelta) GetTxns() []*TxnStatus {
	if m != nil {
		return m.Txns
	}
	return nil
}

func (m *OracleDelta) GetMaxAssigned() uint64 {
	if m != nil {
		return m.MaxAssigned
	}
	return 0
}

type TxnTimestamps struct {
	Ts                   []uint64 `protobuf:"varint,1,rep,packed,name=ts,proto3" json:"ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxnTimestamps) Reset()         { *m = TxnTimestamps{} }
func (m *TxnTimestamps) String() string { return proto.CompactTextString(m) }
func (*TxnTimestamps) ProtoMessage()    {}
func (*TxnTimestamps) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{39}
}

func (m *TxnTimestamps) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxnTimestamps.Unmarshal(m, b)
}
func (m *TxnTimestamps) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxnTimestamps.Marshal(b, m, deterministic)
}
func (m *TxnTimestamps) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxnTimestamps.Merge(m, src)
}
func (m *TxnTimestamps) XXX_Size() int {
	return xxx_messageInfo_TxnTimestamps.Size(m)
}
func (m *TxnTimestamps) XXX_DiscardUnknown() {
	xxx_messageInfo_TxnTimestamps.DiscardUnknown(m)
}

var xxx_messageInfo_TxnTimestamps proto.InternalMessageInfo

func (m *TxnTimestamps) GetTs() []uint64 {
	if m != nil {
		return m.Ts
	}
	return nil
}

type PeerResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerResponse) Reset()         { *m = PeerResponse{} }
func (m *PeerResponse) String() string { return proto.CompactTextString(m) }
func (*PeerResponse) ProtoMessage()    {}
func (*PeerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{40}
}

func (m *PeerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerResponse.Unmarshal(m, b)
}
func (m *PeerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerResponse.Marshal(b, m, deterministic)
}
func (m *PeerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerResponse.Merge(m, src)
}
func (m *PeerResponse) XXX_Size() int {
	return xxx_messageInfo_PeerResponse.Size(m)
}
func (m *PeerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PeerResponse proto.InternalMessageInfo

func (m *PeerResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type RaftBatch struct {
	Context              *RaftContext `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Payload              *api.Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RaftBatch) Reset()         { *m = RaftBatch{} }
func (m *RaftBatch) String() string { return proto.CompactTextString(m) }
func (*RaftBatch) ProtoMessage()    {}
func (*RaftBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{41}
}

func (m *RaftBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaftBatch.Unmarshal(m, b)
}
func (m *RaftBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaftBatch.Marshal(b, m, deterministic)
}
func (m *RaftBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaftBatch.Merge(m, src)
}
func (m *RaftBatch) XXX_Size() int {
	return xxx_messageInfo_RaftBatch.Size(m)
}
func (m *RaftBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_RaftBatch.DiscardUnknown(m)
}

var xxx_messageInfo_RaftBatch proto.InternalMessageInfo

func (m *RaftBatch) GetContext() *RaftContext {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *RaftBatch) GetPayload() *api.Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Num struct {
	Val                  uint64   `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
	ReadOnly             bool     `protobuf:"varint,2,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Num) Reset()         { *m = Num{} }
func (m *Num) String() string { return proto.CompactTextString(m) }
func (*Num) ProtoMessage()    {}
func (*Num) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{42}
}

func (m *Num) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Num.Unmarshal(m, b)
}
func (m *Num) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Num.Marshal(b, m, deterministic)
}
func (m *Num) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Num.Merge(m, src)
}
func (m *Num) XXX_Size() int {
	return xxx_messageInfo_Num.Size(m)
}
func (m *Num) XXX_DiscardUnknown() {
	xxx_messageInfo_Num.DiscardUnknown(m)
}

var xxx_messageInfo_Num proto.InternalMessageInfo

func (m *Num) GetVal() uint64 {
	if m != nil {
		return m.Val
	}
	return 0
}

func (m *Num) GetReadOnly() bool {
	if m != nil {
		return m.ReadOnly
	}
	return false
}

type AssignedIds struct {
	StartId uint64 `protobuf:"varint,1,opt,name=startId,proto3" json:"startId,omitempty"`
	EndId   uint64 `protobuf:"varint,2,opt,name=endId,proto3" json:"endId,omitempty"`
	// The following is used for read only transactions.
	ReadOnly             uint64   `protobuf:"varint,5,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignedIds) Reset()         { *m = AssignedIds{} }
func (m *AssignedIds) String() string { return proto.CompactTextString(m) }
func (*AssignedIds) ProtoMessage()    {}
func (*AssignedIds) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{43}
}

func (m *AssignedIds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignedIds.Unmarshal(m, b)
}
func (m *AssignedIds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignedIds.Marshal(b, m, deterministic)
}
func (m *AssignedIds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignedIds.Merge(m, src)
}
func (m *AssignedIds) XXX_Size() int {
	return xxx_messageInfo_AssignedIds.Size(m)
}
func (m *AssignedIds) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignedIds.DiscardUnknown(m)
}

var xxx_messageInfo_AssignedIds proto.InternalMessageInfo

func (m *AssignedIds) GetStartId() uint64 {
	if m != nil {
		return m.StartId
	}
	return 0
}

func (m *AssignedIds) GetEndId() uint64 {
	if m != nil {
		return m.EndId
	}
	return 0
}

func (m *AssignedIds) GetReadOnly() uint64 {
	if m != nil {
		return m.ReadOnly
	}
	return 0
}

type SnapshotMeta struct {
	ClientTs             uint64   `protobuf:"varint,1,opt,name=client_ts,json=clientTs,proto3" json:"client_ts,omitempty"`
	GroupId              uint32   `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnapshotMeta) Reset()         { *m = SnapshotMeta{} }
func (m *SnapshotMeta) String() string { return proto.CompactTextString(m) }
func (*SnapshotMeta) ProtoMessage()    {}
func (*SnapshotMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{44}
}

func (m *SnapshotMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotMeta.Unmarshal(m, b)
}
func (m *SnapshotMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotMeta.Marshal(b, m, deterministic)
}
func (m *SnapshotMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotMeta.Merge(m, src)
}
func (m *SnapshotMeta) XXX_Size() int {
	return xxx_messageInfo_SnapshotMeta.Size(m)
}
func (m *SnapshotMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotMeta.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotMeta proto.InternalMessageInfo

func (m *SnapshotMeta) GetClientTs() uint64 {
	if m != nil {
		return m.ClientTs
	}
	return 0
}

func (m *SnapshotMeta) GetGroupId() uint32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

// Status describes a general status response.
// code: 0 = success, 0 != failure.
type Status struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{45}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Status) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type BackupRequest struct {
	ReadTs               uint64   `protobuf:"varint,1,opt,name=read_ts,json=readTs,proto3" json:"read_ts,omitempty"`
	GroupId              uint32   `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UnixTs               string   `protobuf:"bytes,3,opt,name=unix_ts,json=unixTs,proto3" json:"unix_ts,omitempty"`
	Location             string   `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupRequest) Reset()         { *m = BackupRequest{} }
func (m *BackupRequest) String() string { return proto.CompactTextString(m) }
func (*BackupRequest) ProtoMessage()    {}
func (*BackupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{46}
}

func (m *BackupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupRequest.Unmarshal(m, b)
}
func (m *BackupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupRequest.Marshal(b, m, deterministic)
}
func (m *BackupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupRequest.Merge(m, src)
}
func (m *BackupRequest) XXX_Size() int {
	return xxx_messageInfo_BackupRequest.Size(m)
}
func (m *BackupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BackupRequest proto.InternalMessageInfo

func (m *BackupRequest) GetReadTs() uint64 {
	if m != nil {
		return m.ReadTs
	}
	return 0
}

func (m *BackupRequest) GetGroupId() uint32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *BackupRequest) GetUnixTs() string {
	if m != nil {
		return m.UnixTs
	}
	return ""
}

func (m *BackupRequest) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

type ExportRequest struct {
	GroupId              uint32   `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	ReadTs               uint64   `protobuf:"varint,2,opt,name=read_ts,json=readTs,proto3" json:"read_ts,omitempty"`
	UnixTs               int64    `protobuf:"varint,3,opt,name=unix_ts,json=unixTs,proto3" json:"unix_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExportRequest) Reset()         { *m = ExportRequest{} }
func (m *ExportRequest) String() string { return proto.CompactTextString(m) }
func (*ExportRequest) ProtoMessage()    {}
func (*ExportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{47}
}

func (m *ExportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportRequest.Unmarshal(m, b)
}
func (m *ExportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportRequest.Marshal(b, m, deterministic)
}
func (m *ExportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportRequest.Merge(m, src)
}
func (m *ExportRequest) XXX_Size() int {
	return xxx_messageInfo_ExportRequest.Size(m)
}
func (m *ExportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExportRequest proto.InternalMessageInfo

func (m *ExportRequest) GetGroupId() uint32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *ExportRequest) GetReadTs() uint64 {
	if m != nil {
		return m.ReadTs
	}
	return 0
}

func (m *ExportRequest) GetUnixTs() int64 {
	if m != nil {
		return m.UnixTs
	}
	return 0
}

func init() {
	proto.RegisterEnum("pb.DirectedEdge_Op", DirectedEdge_Op_name, DirectedEdge_Op_value)
	proto.RegisterEnum("pb.Posting_ValType", Posting_ValType_name, Posting_ValType_value)
	proto.RegisterEnum("pb.Posting_PostingType", Posting_PostingType_name, Posting_PostingType_value)
	proto.RegisterEnum("pb.SchemaUpdate_Directive", SchemaUpdate_Directive_name, SchemaUpdate_Directive_value)
	proto.RegisterType((*List)(nil), "pb.List")
	proto.RegisterType((*TaskValue)(nil), "pb.TaskValue")
	proto.RegisterType((*SrcFunction)(nil), "pb.SrcFunction")
	proto.RegisterType((*Query)(nil), "pb.Query")
	proto.RegisterType((*ValueList)(nil), "pb.ValueList")
	proto.RegisterType((*LangList)(nil), "pb.LangList")
	proto.RegisterType((*Result)(nil), "pb.Result")
	proto.RegisterType((*Order)(nil), "pb.Order")
	proto.RegisterType((*SortMessage)(nil), "pb.SortMessage")
	proto.RegisterType((*SortResult)(nil), "pb.SortResult")
	proto.RegisterType((*RaftContext)(nil), "pb.RaftContext")
	proto.RegisterType((*Member)(nil), "pb.Member")
	proto.RegisterType((*Group)(nil), "pb.Group")
	proto.RegisterMapType((map[uint64]*Member)(nil), "pb.Group.MembersEntry")
	proto.RegisterMapType((map[string]*Tablet)(nil), "pb.Group.TabletsEntry")
	proto.RegisterType((*ZeroProposal)(nil), "pb.ZeroProposal")
	proto.RegisterMapType((map[uint32]uint64)(nil), "pb.ZeroProposal.SnapshotTsEntry")
	proto.RegisterType((*MembershipState)(nil), "pb.MembershipState")
	proto.RegisterMapType((map[uint32]*Group)(nil), "pb.MembershipState.GroupsEntry")
	proto.RegisterMapType((map[uint64]*Member)(nil), "pb.MembershipState.ZerosEntry")
	proto.RegisterType((*ConnectionState)(nil), "pb.ConnectionState")
	proto.RegisterType((*Tablet)(nil), "pb.Tablet")
	proto.RegisterType((*DirectedEdge)(nil), "pb.DirectedEdge")
	proto.RegisterType((*Mutations)(nil), "pb.Mutations")
	proto.RegisterType((*Snapshot)(nil), "pb.Snapshot")
	proto.RegisterType((*Proposal)(nil), "pb.Proposal")
	proto.RegisterType((*KVS)(nil), "pb.KVS")
	proto.RegisterType((*Posting)(nil), "pb.Posting")
	proto.RegisterType((*UidBlock)(nil), "pb.UidBlock")
	proto.RegisterType((*UidPack)(nil), "pb.UidPack")
	proto.RegisterType((*PostingList)(nil), "pb.PostingList")
	proto.RegisterType((*FacetParam)(nil), "pb.FacetParam")
	proto.RegisterType((*FacetParams)(nil), "pb.FacetParams")
	proto.RegisterType((*Facets)(nil), "pb.Facets")
	proto.RegisterType((*FacetsList)(nil), "pb.FacetsList")
	proto.RegisterType((*Function)(nil), "pb.Function")
	proto.RegisterType((*FilterTree)(nil), "pb.FilterTree")
	proto.RegisterType((*SchemaRequest)(nil), "pb.SchemaRequest")
	proto.RegisterType((*SchemaResult)(nil), "pb.SchemaResult")
	proto.RegisterType((*SchemaUpdate)(nil), "pb.SchemaUpdate")
	proto.RegisterType((*MapEntry)(nil), "pb.MapEntry")
	proto.RegisterType((*MovePredicatePayload)(nil), "pb.MovePredicatePayload")
	proto.RegisterType((*TxnStatus)(nil), "pb.TxnStatus")
	proto.RegisterType((*OracleDelta)(nil), "pb.OracleDelta")
	proto.RegisterType((*TxnTimestamps)(nil), "pb.TxnTimestamps")
	proto.RegisterType((*PeerResponse)(nil), "pb.PeerResponse")
	proto.RegisterType((*RaftBatch)(nil), "pb.RaftBatch")
	proto.RegisterType((*Num)(nil), "pb.Num")
	proto.RegisterType((*AssignedIds)(nil), "pb.AssignedIds")
	proto.RegisterType((*SnapshotMeta)(nil), "pb.SnapshotMeta")
	proto.RegisterType((*Status)(nil), "pb.Status")
	proto.RegisterType((*BackupRequest)(nil), "pb.BackupRequest")
	proto.RegisterType((*ExportRequest)(nil), "pb.ExportRequest")
}

func init() { proto.RegisterFile("pb.proto", fileDescriptor_f80abaa17e25ccc8) }

var fileDescriptor_f80abaa17e25ccc8 = []byte{
	// 3134 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x39, 0x4b, 0x73, 0x1b, 0xc7,
	0x99, 0x9c, 0x01, 0x30, 0x98, 0xf9, 0x00, 0x50, 0x70, 0x5b, 0x96, 0x61, 0xda, 0x96, 0xe8, 0xb1,
	0x64, 0x51, 0xb2, 0x45, 0xc9, 0xb4, 0x77, 0xd7, 0xf2, 0xd6, 0x1e, 0x28, 0x11, 0x52, 0xc1, 0xe6,
	0x6b, 0x1b, 0xa0, 0xbc, 0xeb, 0xda, 0x5a, 0x54, 0x63, 0xa6, 0x09, 0xce, 0x72, 0x30, 0x33, 0x3b,
	0x3d, 0x60, 0x81, 0xba, 0xed, 0x61, 0xff, 0x43, 0x0e, 0xa9, 0xdc, 0x72, 0xc9, 0x25, 0xd7, 0xe4,
	0x07, 0xe4, 0x47, 0xe4, 0x9a, 0x5b, 0xce, 0x39, 0xe5, 0x96, 0xea, 0xaf, 0x7b, 0x1e, 0x80, 0x28,
	0xc9, 0x4e, 0x55, 0x4e, 0x98, 0xef, 0xd5, 0x8f, 0xaf, 0xbf, 0x37, 0xc0, 0x4e, 0x26, 0xdb, 0x49,
	0x1a, 0x67, 0x31, 0x31, 0x93, 0xc9, 0x86, 0xc3, 0x92, 0x40, 0x81, 0x1b, 0x77, 0xa7, 0x41, 0x76,
	0x36, 0x9f, 0x6c, 0x7b, 0xf1, 0xec, 0xa1, 0x3f, 0x4d, 0x59, 0x72, 0xf6, 0x20, 0x88, 0x1f, 0x4e,
	0x98, 0x3f, 0xe5, 0xe9, 0xc3, 0x64, 0xf2, 0x30, 0x97, 0x73, 0x37, 0xa0, 0xbe, 0x1f, 0x88, 0x8c,
	0x10, 0xa8, 0xcf, 0x03, 0x5f, 0xf4, 0x8c, 0xcd, 0xda, 0x96, 0x45, 0xf1, 0xdb, 0x3d, 0x00, 0x67,
	0xc4, 0xc4, 0xf9, 0x0b, 0x16, 0xce, 0x39, 0xe9, 0x42, 0xed, 0x82, 0x85, 0x3d, 0x63, 0xd3, 0xd8,
	0x6a, 0x53, 0xf9, 0x49, 0xb6, 0xc1, 0xbe, 0x60, 0xe1, 0x38, 0xbb, 0x4c, 0x78, 0xcf, 0xdc, 0x34,
	0xb6, 0xd6, 0x77, 0xde, 0xdd, 0x4e, 0x26, 0xdb, 0xc7, 0xb1, 0xc8, 0x82, 0x68, 0xba, 0xfd, 0x82,
	0x85, 0xa3, 0xcb, 0x84, 0xd3, 0xe6, 0x85, 0xfa, 0x70, 0x8f, 0xa0, 0x35, 0x4c, 0xbd, 0x67, 0xf3,
	0xc8, 0xcb, 0x82, 0x38, 0x92, 0x3b, 0x46, 0x6c, 0xc6, 0x71, 0x45, 0x87, 0xe2, 0xb7, 0xc4, 0xb1,
	0x74, 0x2a, 0x7a, 0xb5, 0xcd, 0x9a, 0xc4, 0xc9, 0x6f, 0xd2, 0x83, 0x66, 0x20, 0x9e, 0xc6, 0xf3,
	0x28, 0xeb, 0xd5, 0x37, 0x8d, 0x2d, 0x9b, 0xe6, 0xa0, 0xfb, 0x17, 0x13, 0x1a, 0xff, 0x3e, 0xe7,
	0xe9, 0x25, 0xca, 0x65, 0x59, 0x9a, 0xaf, 0x25, 0xbf, 0xc9, 0x75, 0x68, 0x84, 0x2c, 0x9a, 0x8a,
	0x9e, 0x89, 0x8b, 0x29, 0x80, 0x7c, 0x08, 0x0e, 0x3b, 0xcd, 0x78, 0x3a, 0x9e, 0x07, 0x7e, 0xaf,
	0xb6, 0x69, 0x6c, 0x59, 0xd4, 0x46, 0xc4, 0x49, 0xe0, 0x93, 0x0f, 0xc0, 0xf6, 0xe3, 0xb1, 0x57,
	0xdd, 0xcb, 0x8f, 0x71, 0x2f, 0xf2, 0x29, 0xd8, 0xf3, 0xc0, 0x1f, 0x87, 0x81, 0xc8, 0x7a, 0x8d,
	0x4d, 0x63, 0xab, 0xb5, 0x63, 0xcb, 0xcb, 0x4a, 0xdd, 0xd1, 0xe6, 0x3c, 0xf0, 0x51, 0x89, 0xf7,
	0xc1, 0x16, 0xa9, 0x37, 0x3e, 0x9d, 0x47, 0x5e, 0xcf, 0x42, 0xa6, 0x6b, 0x92, 0xa9, 0x72, 0x6b,
	0xda, 0x14, 0x0a, 0x90, 0xd7, 0x4a, 0xf9, 0x05, 0x4f, 0x05, 0xef, 0x35, 0xd5, 0x56, 0x1a, 0x24,
	0x8f, 0xa0, 0x75, 0xca, 0x3c, 0x9e, 0x8d, 0x13, 0x96, 0xb2, 0x59, 0xcf, 0x2e, 0x17, 0x7a, 0x26,
	0xd1, 0xc7, 0x12, 0x2b, 0x28, 0x9c, 0x16, 0x00, 0xf9, 0x0a, 0x3a, 0x08, 0x89, 0xf1, 0x69, 0x10,
	0x66, 0x3c, 0xed, 0x39, 0x28, 0xb3, 0x8e, 0x32, 0x88, 0x19, 0xa5, 0x9c, 0xd3, 0xb6, 0x62, 0x52,
	0x18, 0xf2, 0x31, 0x00, 0x5f, 0x24, 0x2c, 0xf2, 0xc7, 0x2c, 0x0c, 0x7b, 0x80, 0x67, 0x70, 0x14,
	0x66, 0x37, 0x0c, 0xc9, 0xfb, 0xf2, 0x7c, 0xcc, 0x1f, 0x67, 0xa2, 0xd7, 0xd9, 0x34, 0xb6, 0xea,
	0xd4, 0x92, 0xe0, 0x48, 0xb8, 0x3b, 0xe0, 0xa0, 0x45, 0xe0, 0x8d, 0xef, 0x80, 0x75, 0x21, 0x01,
	0x65, 0x38, 0xad, 0x9d, 0x8e, 0xdc, 0xb2, 0x30, 0x1a, 0xaa, 0x89, 0xee, 0x4d, 0xb0, 0xf7, 0x59,
	0x34, 0xcd, 0x2d, 0x4d, 0x3e, 0x05, 0x0a, 0x38, 0x14, 0xbf, 0xdd, 0x5f, 0x98, 0x60, 0x51, 0x2e,
	0xe6, 0x61, 0x46, 0xee, 0x02, 0x48, 0x45, 0xcf, 0x58, 0x96, 0x06, 0x0b, 0xbd, 0x6a, 0xa9, 0x6a,
	0x67, 0x1e, 0xf8, 0x07, 0x48, 0x22, 0x8f, 0xa0, 0x8d, 0xab, 0xe7, 0xac, 0x66, 0x79, 0x80, 0xe2,
	0x7c, 0xb4, 0x85, 0x2c, 0x5a, 0xe2, 0x06, 0x58, 0xf8, 0xb6, 0xca, 0xbe, 0x3a, 0x54, 0x43, 0xe4,
	0x0e, 0xac, 0x07, 0x51, 0x26, 0x75, 0xef, 0x65, 0x63, 0x9f, 0x8b, 0xfc, 0xf1, 0x3b, 0x05, 0x76,
	0x8f, 0x8b, 0x8c, 0x7c, 0x09, 0x4a, 0x81, 0xf9, 0x86, 0x0d, 0xdc, 0x70, 0xbd, 0x78, 0x18, 0xa1,
	0x76, 0x44, 0x1e, 0xbd, 0xe3, 0x03, 0x68, 0xc9, 0xfb, 0xe5, 0x12, 0x16, 0x4a, 0xb4, 0xf1, 0x36,
	0x5a, 0x1d, 0x14, 0x24, 0x83, 0x66, 0x97, 0xaa, 0x91, 0x06, 0xa6, 0x0c, 0x02, 0xbf, 0xdd, 0x3e,
	0x34, 0x8e, 0x52, 0x9f, 0xa7, 0x57, 0xda, 0x38, 0x81, 0xba, 0xcf, 0x85, 0x87, 0xee, 0x67, 0x53,
	0xfc, 0x2e, 0xed, 0xbe, 0x56, 0xb1, 0x7b, 0xf7, 0x57, 0x06, 0xb4, 0x86, 0x71, 0x9a, 0x1d, 0x70,
	0x21, 0xd8, 0x94, 0x93, 0x5b, 0xd0, 0x88, 0xe5, 0xb2, 0x5a, 0xc3, 0x8e, 0x3c, 0x13, 0xee, 0x43,
	0x15, 0x7e, 0xe5, 0x1d, 0xcc, 0xd7, 0xbf, 0xc3, 0x75, 0x68, 0x28, 0x8f, 0x91, 0xde, 0xd4, 0xa0,
	0x0a, 0x90, 0xba, 0x8e, 0x4f, 0x4f, 0x05, 0x57, 0xba, 0x6c, 0x50, 0x0d, 0xbd, 0xde, 0xac, 0xfe,
	0x09, 0x40, 0x9e, 0xef, 0x67, 0x5a, 0x81, 0x7b, 0x06, 0x2d, 0xca, 0x4e, 0xb3, 0xa7, 0x71, 0x94,
	0xf1, 0x45, 0x46, 0xd6, 0xc1, 0x0c, 0x7c, 0x54, 0x91, 0x45, 0xcd, 0xc0, 0x97, 0x87, 0x9b, 0xa6,
	0xf1, 0x3c, 0x41, 0x0d, 0x75, 0xa8, 0x02, 0x50, 0x95, 0xbe, 0x9f, 0xe2, 0x89, 0xa5, 0x2a, 0x7d,
	0x3f, 0x25, 0xb7, 0xa0, 0x25, 0x22, 0x96, 0x88, 0xb3, 0x38, 0x93, 0x87, 0xab, 0xe3, 0xe1, 0x20,
	0x47, 0x8d, 0x84, 0xfb, 0x07, 0x03, 0xac, 0x03, 0x3e, 0x9b, 0xf0, 0xf4, 0x95, 0x5d, 0x3e, 0x00,
	0x1b, 0x17, 0x1e, 0x07, 0xbe, 0xde, 0xa8, 0x89, 0xf0, 0xc0, 0xbf, 0x72, 0xab, 0x1b, 0x60, 0x85,
	0x9c, 0x49, 0xe5, 0x2b, 0x3b, 0xd3, 0x90, 0xd4, 0x0d, 0x9b, 0x8d, 0x7d, 0xce, 0x7c, 0x0c, 0x31,
	0x36, 0xb5, 0xd8, 0x6c, 0x8f, 0x33, 0x5f, 0x9e, 0x2d, 0x64, 0x22, 0x1b, 0xcf, 0x13, 0x9f, 0x65,
	0x1c, 0x43, 0x4b, 0x5d, 0x1a, 0x8e, 0xc8, 0x4e, 0x10, 0x43, 0xee, 0xc3, 0x3b, 0x5e, 0x38, 0x17,
	0x32, 0xae, 0x05, 0xd1, 0x69, 0x3c, 0x8e, 0xa3, 0xf0, 0x12, 0xf5, 0x6b, 0xd3, 0x6b, 0x9a, 0x30,
	0x88, 0x4e, 0xe3, 0xa3, 0x28, 0xbc, 0x74, 0x7f, 0x69, 0x42, 0xe3, 0x39, 0xaa, 0xe1, 0x11, 0x34,
	0x67, 0x78, 0xa1, 0xdc, 0x7b, 0x6f, 0x48, 0x0d, 0x23, 0x6d, 0x5b, 0xdd, 0x54, 0xf4, 0xa3, 0x2c,
	0xbd, 0xa4, 0x39, 0x9b, 0x94, 0xc8, 0xd8, 0x24, 0xe4, 0x99, 0xd0, 0x16, 0x51, 0x91, 0x18, 0x29,
	0x82, 0x96, 0xd0, 0x6c, 0xab, 0x6a, 0xad, 0xad, 0xaa, 0x75, 0xe3, 0x19, 0xb4, 0xab, 0x7b, 0xc9,
	0x3c, 0x73, 0xce, 0x2f, 0x51, 0xb9, 0x75, 0x2a, 0x3f, 0xc9, 0x26, 0x34, 0xd0, 0x8b, 0x51, 0xb5,
	0xad, 0x1d, 0x90, 0x5b, 0x2a, 0x11, 0xaa, 0x08, 0xdf, 0x9a, 0xdf, 0x18, 0x72, 0x9d, 0xea, 0x09,
	0xaa, 0xeb, 0x38, 0xaf, 0x5f, 0x47, 0x89, 0x54, 0xd6, 0x71, 0xff, 0x6a, 0x42, 0xfb, 0x47, 0x9e,
	0xc6, 0xc7, 0x69, 0x9c, 0xc4, 0x82, 0x85, 0x64, 0x77, 0xf9, 0x06, 0x4a, 0x53, 0x9b, 0x52, 0xb8,
	0xca, 0xb6, 0x3d, 0x2c, 0xae, 0xa4, 0x34, 0x50, 0xb9, 0x23, 0x71, 0xc1, 0x52, 0x1a, 0xbc, 0xe2,
	0x0a, 0x9a, 0x22, 0x79, 0x94, 0xce, 0x50, 0x47, 0xcb, 0xc7, 0xd3, 0x14, 0x72, 0x13, 0x60, 0xc6,
	0x16, 0xfb, 0x9c, 0x09, 0x3e, 0xf0, 0x73, 0x13, 0x2d, 0x31, 0x64, 0x03, 0xec, 0x19, 0x5b, 0x8c,
	0x16, 0xd1, 0x48, 0xa0, 0x05, 0xd5, 0x69, 0x01, 0x93, 0x8f, 0xc0, 0x99, 0xb1, 0x85, 0xf4, 0x95,
	0x81, 0xaf, 0x2d, 0xa8, 0x44, 0x90, 0x4f, 0xa0, 0x96, 0x2d, 0x22, 0x0c, 0x3c, 0x32, 0xd7, 0xc8,
	0x42, 0x62, 0xb4, 0x88, 0xb4, 0x57, 0x51, 0x49, 0xcb, 0x15, 0x6a, 0x97, 0x0a, 0xed, 0x42, 0xcd,
	0x0b, 0x7c, 0x4c, 0x36, 0x0e, 0x95, 0x9f, 0x1b, 0xff, 0x06, 0xd7, 0x56, 0xf4, 0x50, 0x7d, 0x87,
	0x8e, 0x12, 0xbb, 0x5e, 0x7d, 0x87, 0x7a, 0x55, 0xf7, 0xbf, 0xab, 0xc1, 0x35, 0x6d, 0x0c, 0x67,
	0x41, 0x32, 0xcc, 0xa4, 0x69, 0xf7, 0xa0, 0x89, 0x11, 0x85, 0xa7, 0xda, 0x26, 0x72, 0x90, 0xfc,
	0x0b, 0x58, 0xe8, 0x65, 0xb9, 0x2d, 0xde, 0x2a, 0xb5, 0x5a, 0x88, 0x2b, 0xdb, 0xd4, 0x4f, 0xa2,
	0xd9, 0xc9, 0xd7, 0xd0, 0x78, 0xc9, 0xd3, 0x58, 0x45, 0xc8, 0xd6, 0xce, 0xcd, 0xab, 0xe4, 0xe4,
	0xdb, 0x6a, 0x31, 0xc5, 0xfc, 0x0f, 0x54, 0xfe, 0x6d, 0x19, 0x13, 0x67, 0xf1, 0x05, 0xf7, 0x7b,
	0x4d, 0x3c, 0x51, 0xd5, 0x3e, 0x72, 0x52, 0xae, 0x6d, 0xbb, 0xd4, 0xf6, 0x1e, 0xb4, 0x2a, 0xd7,
	0xbb, 0x42, 0xd3, 0xb7, 0x96, 0x2d, 0xde, 0x29, 0x9c, 0xb5, 0xea, 0x38, 0x7b, 0x00, 0xe5, 0x65,
	0xff, 0x5e, 0xf7, 0x73, 0xff, 0xcf, 0x80, 0x6b, 0x4f, 0xe3, 0x28, 0xe2, 0x58, 0xe6, 0xa8, 0xa7,
	0x2b, 0xcd, 0xde, 0x78, 0xad, 0xd9, 0xdf, 0x83, 0x86, 0x90, 0xcc, 0x7a, 0xf5, 0x77, 0xaf, 0x78,
	0x0b, 0xaa, 0x38, 0x64, 0x28, 0x99, 0xb1, 0xc5, 0x38, 0xe1, 0x91, 0x1f, 0x44, 0xd3, 0x3c, 0x94,
	0xcc, 0xd8, 0xe2, 0x58, 0x61, 0xdc, 0xff, 0x37, 0xc0, 0x52, 0x1e, 0xb3, 0x14, 0x91, 0x8d, 0xe5,
	0x88, 0xfc, 0x11, 0x38, 0x49, 0xca, 0xfd, 0xc0, 0xcb, 0x77, 0x75, 0x68, 0x89, 0x90, 0xc6, 0x79,
	0x1a, 0xa7, 0x1e, 0xc7, 0xe5, 0x6d, 0xaa, 0x00, 0x89, 0x15, 0x09, 0xf3, 0x54, 0xa9, 0x56, 0xa3,
	0x0a, 0x90, 0x71, 0x5c, 0x3d, 0x0e, 0x3e, 0x8a, 0x4d, 0x35, 0xe4, 0xfe, 0xc6, 0x84, 0xf6, 0x5e,
	0x90, 0x72, 0x2f, 0xe3, 0x7e, 0xdf, 0x9f, 0x22, 0x23, 0x8f, 0xb2, 0x20, 0xbb, 0xd4, 0x39, 0x43,
	0x43, 0x45, 0x4a, 0x37, 0x97, 0xcb, 0x56, 0xa5, 0xee, 0x1a, 0x56, 0xda, 0x0a, 0x20, 0x3b, 0x00,
	0xaa, 0xd8, 0xc1, 0x6a, 0xbb, 0xfe, 0xfa, 0x6a, 0xdb, 0x41, 0x36, 0xf9, 0x29, 0x75, 0xa0, 0x64,
	0x02, 0x95, 0x4f, 0x2c, 0x2c, 0xc5, 0xe7, 0xd2, 0x56, 0xb1, 0x46, 0x98, 0xf0, 0x10, 0x6d, 0x11,
	0x6b, 0x84, 0x09, 0x0f, 0x8b, 0xca, 0xac, 0xa9, 0x8e, 0x23, 0xbf, 0xc9, 0xa7, 0x60, 0xc6, 0x09,
	0xde, 0x4f, 0x6f, 0x58, 0xbd, 0xd8, 0xf6, 0x51, 0x42, 0xcd, 0x38, 0x91, 0x0f, 0xad, 0x4a, 0xcb,
	0x9e, 0xa3, 0xed, 0x57, 0x06, 0x10, 0x2c, 0x8a, 0xa8, 0xa6, 0xb8, 0x37, 0xc0, 0x3c, 0x4a, 0x48,
	0x13, 0x6a, 0xc3, 0xfe, 0xa8, 0xbb, 0x26, 0x3f, 0xf6, 0xfa, 0xfb, 0x5d, 0xc3, 0xfd, 0x93, 0x01,
	0xce, 0xc1, 0x3c, 0x63, 0xd2, 0x6c, 0xc4, 0x9b, 0xde, 0xed, 0x03, 0xb0, 0x45, 0xc6, 0x52, 0x0c,
	0xc2, 0x2a, 0x72, 0x34, 0x11, 0x1e, 0x09, 0xf2, 0x19, 0x34, 0xb8, 0x3f, 0xe5, 0xb9, 0x43, 0x77,
	0x57, 0xcf, 0x49, 0x15, 0x99, 0x6c, 0x81, 0x25, 0xbc, 0x33, 0x3e, 0x63, 0xbd, 0x7a, 0xc9, 0x38,
	0x44, 0x8c, 0x4a, 0xa4, 0x54, 0xd3, 0xb1, 0x13, 0x48, 0xe3, 0x04, 0x4b, 0xe3, 0x86, 0xee, 0x04,
	0xd2, 0x38, 0x91, 0x85, 0xf1, 0x0e, 0xbc, 0x17, 0x4c, 0xa3, 0x38, 0xe5, 0xe3, 0x20, 0xf2, 0xf9,
	0x62, 0xec, 0xc5, 0xd1, 0x69, 0x18, 0x78, 0x19, 0xea, 0xd2, 0xa6, 0xef, 0x2a, 0xe2, 0x40, 0xd2,
	0x9e, 0x6a, 0x92, 0xbb, 0x00, 0x3b, 0x8f, 0x8b, 0xe4, 0x9e, 0x0c, 0x68, 0x18, 0x57, 0xb5, 0x5b,
	0x60, 0x69, 0x5f, 0x29, 0x62, 0x68, 0x4e, 0x97, 0xcf, 0x84, 0x7b, 0xe4, 0x91, 0x12, 0x81, 0x6a,
	0x09, 0x55, 0xab, 0x96, 0x50, 0x58, 0x0d, 0xc6, 0x11, 0xd7, 0x55, 0x05, 0x7e, 0xcb, 0x6c, 0x6f,
	0x17, 0xa9, 0xec, 0x73, 0x70, 0x66, 0xb9, 0xaa, 0xb5, 0xc3, 0x61, 0xbd, 0x5c, 0xe8, 0x9f, 0x96,
	0x74, 0x72, 0x03, 0xcc, 0xf3, 0x0b, 0xad, 0x28, 0x4b, 0x72, 0x7d, 0xff, 0x82, 0x9a, 0xe7, 0x17,
	0xa5, 0xc7, 0x36, 0xde, 0xea, 0xb1, 0x77, 0xe1, 0x9a, 0x17, 0x72, 0x16, 0x8d, 0x4b, 0x87, 0x53,
	0x06, 0xb7, 0x8e, 0xe8, 0xe3, 0xc2, 0xeb, 0x74, 0xd4, 0x69, 0x96, 0xb9, 0xe5, 0x0e, 0x34, 0x7c,
	0x1e, 0x66, 0xac, 0xda, 0xfe, 0x1c, 0xa5, 0xcc, 0x0b, 0xf9, 0x9e, 0x44, 0x53, 0x45, 0x25, 0x5b,
	0x60, 0xe7, 0x79, 0x56, 0x37, 0x3d, 0x58, 0x5d, 0xe7, 0xca, 0xa6, 0x05, 0xb5, 0xd4, 0x25, 0x54,
	0x74, 0xe9, 0x7e, 0x09, 0xb5, 0xef, 0x5f, 0x0c, 0xf5, 0x5d, 0x8d, 0x57, 0xee, 0x9a, 0x6b, 0xd4,
	0xac, 0x68, 0xf4, 0xcf, 0x35, 0x68, 0x6a, 0xaf, 0x93, 0xe7, 0x9e, 0x17, 0x95, 0xa0, 0xfc, 0x5c,
	0x4e, 0x6e, 0x85, 0xfb, 0x56, 0x5b, 0xe5, 0xda, 0xdb, 0x5b, 0x65, 0xf2, 0x2d, 0xb4, 0x13, 0x45,
	0xab, 0x3a, 0xfc, 0xfb, 0x55, 0x19, 0xfd, 0x8b, 0x72, 0xad, 0xa4, 0x04, 0xa4, 0xe9, 0x62, 0xcf,
	0x91, 0xb1, 0x29, 0x3e, 0x51, 0x9b, 0x36, 0x25, 0x3c, 0x62, 0xd3, 0xd7, 0xb8, 0xfd, 0x4f, 0xf0,
	0x5e, 0x59, 0xf1, 0xc6, 0x49, 0xaf, 0x8d, 0x1e, 0x29, 0x3d, 0xbe, 0xea, 0x8c, 0x9d, 0x65, 0x67,
	0xfc, 0x10, 0x1c, 0x2f, 0x9e, 0xcd, 0x02, 0xa4, 0xad, 0xab, 0x44, 0xa8, 0x10, 0x23, 0xe1, 0xbe,
	0x84, 0xa6, 0xbe, 0x2c, 0x69, 0x41, 0x73, 0xaf, 0xff, 0x6c, 0xf7, 0x64, 0x5f, 0x86, 0x03, 0x00,
	0xeb, 0xc9, 0xe0, 0x70, 0x97, 0xfe, 0x67, 0xd7, 0x90, 0xa1, 0x61, 0x70, 0x38, 0xea, 0x9a, 0xc4,
	0x81, 0xc6, 0xb3, 0xfd, 0xa3, 0xdd, 0x51, 0xb7, 0x46, 0x6c, 0xa8, 0x3f, 0x39, 0x3a, 0xda, 0xef,
	0xd6, 0x49, 0x1b, 0xec, 0xbd, 0xdd, 0x51, 0x7f, 0x34, 0x38, 0xe8, 0x77, 0x1b, 0x92, 0xf7, 0x79,
	0xff, 0xa8, 0x6b, 0xc9, 0x8f, 0x93, 0xc1, 0x5e, 0xb7, 0x29, 0xe9, 0xc7, 0xbb, 0xc3, 0xe1, 0x0f,
	0x47, 0x74, 0xaf, 0x6b, 0xcb, 0x75, 0x87, 0x23, 0x3a, 0x38, 0x7c, 0xde, 0x75, 0xdc, 0x2f, 0xa1,
	0x55, 0x51, 0x9a, 0x94, 0xa0, 0xfd, 0x67, 0xdd, 0x35, 0xb9, 0xcd, 0x8b, 0xdd, 0xfd, 0x93, 0x7e,
	0xd7, 0x20, 0xeb, 0x00, 0xf8, 0x39, 0xde, 0xdf, 0x3d, 0x7c, 0xde, 0x35, 0xdd, 0x7f, 0x06, 0xfb,
	0x24, 0xf0, 0x9f, 0x84, 0xb1, 0x77, 0x2e, 0x6d, 0x61, 0xc2, 0x04, 0xd7, 0xa9, 0x11, 0xbf, 0x65,
	0x60, 0x47, 0x3b, 0x14, 0xfa, 0xb9, 0x35, 0xe4, 0x1e, 0x42, 0xf3, 0x24, 0xf0, 0x8f, 0x99, 0x77,
	0x2e, 0xdb, 0xec, 0x89, 0x94, 0x1f, 0x8b, 0xe0, 0x25, 0xd7, 0x31, 0xcd, 0x41, 0xcc, 0x30, 0x78,
	0xc9, 0xc9, 0x6d, 0xb0, 0x10, 0xc8, 0x8b, 0x18, 0x34, 0xdf, 0x7c, 0x4f, 0xaa, 0x69, 0x6e, 0x56,
	0x1c, 0x1d, 0x5b, 0xe8, 0x5b, 0x50, 0x4f, 0x98, 0x77, 0xae, 0xe3, 0x47, 0x4b, 0x8b, 0xc8, 0xed,
	0x28, 0x12, 0xc8, 0x5d, 0xb0, 0xb5, 0x49, 0xe4, 0xeb, 0xb6, 0x2a, 0xb6, 0x43, 0x0b, 0xe2, 0xf2,
	0x63, 0xd5, 0x56, 0x1e, 0xeb, 0x6b, 0x80, 0x72, 0xe2, 0x70, 0x45, 0x41, 0x7d, 0x1d, 0x1a, 0x2c,
	0x0c, 0xf4, 0xe5, 0x1d, 0xaa, 0x00, 0xf7, 0x10, 0x5a, 0x95, 0x39, 0x85, 0xb4, 0x14, 0x16, 0x86,
	0xe3, 0x73, 0x7e, 0x29, 0x50, 0xd6, 0xa6, 0x4d, 0x16, 0x86, 0xdf, 0xf3, 0x4b, 0x41, 0x6e, 0x43,
	0x43, 0x8d, 0x38, 0xcc, 0x95, 0x4e, 0x1a, 0x45, 0xa9, 0x22, 0xba, 0x5f, 0x80, 0xa5, 0xda, 0xeb,
	0x8a, 0xa1, 0x1a, 0xaf, 0x4d, 0x33, 0x8f, 0xf5, 0x99, 0xb1, 0x19, 0x27, 0x9f, 0xeb, 0x51, 0x8a,
	0x50, 0x83, 0x1b, 0xa3, 0xac, 0xae, 0x14, 0x93, 0x9e, 0xa2, 0x20, 0xb3, 0xbb, 0x07, 0xf6, 0x1b,
	0x87, 0x53, 0x5a, 0x01, 0x66, 0xa9, 0x80, 0x2b, 0xc6, 0x55, 0xee, 0xff, 0x00, 0x94, 0x23, 0x17,
	0xed, 0x37, 0x6a, 0x15, 0xe9, 0x37, 0xf7, 0xc1, 0xf6, 0xce, 0x82, 0xd0, 0x4f, 0x79, 0xb4, 0x74,
	0xeb, 0x72, 0x48, 0x53, 0xd0, 0xc9, 0x26, 0xd4, 0x71, 0x92, 0x54, 0x2b, 0xe3, 0x5a, 0x31, 0x46,
	0x42, 0x8a, 0x3b, 0x81, 0x8e, 0xca, 0x5e, 0x94, 0xff, 0xef, 0x9c, 0x8b, 0x37, 0x96, 0x3d, 0x37,
	0x01, 0x8a, 0x28, 0x9c, 0xcf, 0xc4, 0x2a, 0x18, 0x69, 0xca, 0xa7, 0x01, 0x0f, 0xfd, 0xfc, 0x36,
	0x1a, 0x72, 0xff, 0x15, 0xda, 0xf9, 0x1e, 0xd8, 0x99, 0x7f, 0x5e, 0xe4, 0x50, 0xa5, 0x4d, 0xd5,
	0x2c, 0x28, 0x96, 0xc3, 0xd8, 0xe7, 0x4f, 0xcc, 0x9e, 0x91, 0xa7, 0x51, 0xf7, 0x8f, 0x66, 0x2e,
	0xad, 0x1b, 0xd5, 0xa5, 0xe2, 0xcb, 0x58, 0x2d, 0xbe, 0x96, 0xab, 0x1c, 0xf3, 0x27, 0x55, 0x39,
	0xdf, 0x80, 0xe3, 0x63, 0xaa, 0x0f, 0x2e, 0xf2, 0xd8, 0xba, 0xb1, 0x9a, 0xd6, 0x75, 0x31, 0x10,
	0x5c, 0x70, 0x5a, 0x32, 0xcb, 0xb3, 0x64, 0xf1, 0x39, 0x8f, 0x82, 0x97, 0xd8, 0x89, 0xcb, 0x4b,
	0x97, 0x88, 0x72, 0xac, 0xa1, 0xd2, 0xbf, 0x1e, 0x6b, 0xe4, 0x13, 0x1a, 0xab, 0x9c, 0xd0, 0x48,
	0xcd, 0xcd, 0x13, 0xc1, 0xd3, 0x2c, 0x2f, 0x03, 0x15, 0x54, 0x94, 0x53, 0x8e, 0xe6, 0x65, 0xd1,
	0xd4, 0x7d, 0x0c, 0x4e, 0x71, 0x16, 0x19, 0xd4, 0x0e, 0x8f, 0x0e, 0xfb, 0x2a, 0x04, 0x0d, 0x0e,
	0xf7, 0xfa, 0xff, 0xd1, 0x35, 0x64, 0x58, 0xa4, 0xfd, 0x17, 0x7d, 0x3a, 0xec, 0x77, 0x4d, 0x19,
	0xbe, 0xf6, 0xfa, 0xfb, 0xfd, 0x51, 0xbf, 0x5b, 0xfb, 0xae, 0x6e, 0x37, 0xbb, 0x36, 0xb5, 0xf9,
	0x22, 0x09, 0x03, 0x2f, 0xc8, 0xdc, 0x13, 0xb0, 0x0f, 0x58, 0xf2, 0x4a, 0xd5, 0xde, 0x2e, 0x7a,
	0xb3, 0xb9, 0x9e, 0x46, 0xe8, 0xcc, 0x74, 0x07, 0x9a, 0xda, 0xed, 0xb5, 0x45, 0x2d, 0x85, 0x84,
	0x9c, 0x26, 0x8b, 0xe8, 0xeb, 0x07, 0xf1, 0x05, 0x2f, 0x92, 0xf3, 0x31, 0xbb, 0x0c, 0x63, 0xe6,
	0xbf, 0xe5, 0xe9, 0x3e, 0x06, 0x10, 0xf1, 0x3c, 0xf5, 0xf8, 0x78, 0x5a, 0x0c, 0x41, 0x1c, 0x85,
	0x79, 0xae, 0x27, 0xab, 0x5c, 0x64, 0x48, 0xac, 0x29, 0xc3, 0x94, 0xb0, 0x24, 0xbd, 0x07, 0x56,
	0xb6, 0x88, 0xca, 0x99, 0x4b, 0x23, 0x93, 0x2d, 0x93, 0xfb, 0x14, 0x9c, 0xd1, 0x02, 0x1b, 0x89,
	0xb9, 0x58, 0x4a, 0x37, 0xc6, 0x1b, 0xd2, 0x8d, 0xb9, 0x12, 0xc1, 0x86, 0xd0, 0xaa, 0x14, 0x0d,
	0xe4, 0x13, 0xa8, 0x67, 0x8b, 0x68, 0x79, 0x56, 0x99, 0xef, 0x41, 0x91, 0x44, 0x3e, 0x81, 0xb6,
	0x6c, 0x32, 0x98, 0x10, 0xc1, 0x34, 0xe2, 0xbe, 0x5e, 0x51, 0x36, 0x1e, 0xbb, 0x1a, 0xe5, 0xde,
	0x82, 0x8e, 0xec, 0xea, 0x82, 0x19, 0x17, 0x19, 0x9b, 0x25, 0x98, 0x1c, 0x75, 0x4c, 0xaa, 0x53,
	0x33, 0x13, 0xee, 0x67, 0xd0, 0x3e, 0xe6, 0x3c, 0xa5, 0x5c, 0x24, 0x71, 0xa4, 0xb2, 0x84, 0xc0,
	0x3d, 0x74, 0x00, 0xd4, 0x90, 0xfb, 0xdf, 0xe0, 0xc8, 0xb2, 0xef, 0x09, 0xcb, 0xbc, 0xb3, 0x9f,
	0x53, 0x16, 0x7e, 0x06, 0xcd, 0x44, 0x3d, 0x8a, 0x2e, 0xe2, 0xda, 0xe8, 0x83, 0xfa, 0xa1, 0x68,
	0x4e, 0x74, 0xbf, 0x86, 0xda, 0xe1, 0x7c, 0x56, 0x9d, 0xdc, 0xd7, 0xd5, 0xe4, 0xfe, 0x43, 0x70,
	0xb0, 0x82, 0xc4, 0x31, 0x91, 0xaa, 0x6d, 0x6c, 0x89, 0xc0, 0xf9, 0xd0, 0x8f, 0xd0, 0xca, 0xaf,
	0x3a, 0xf0, 0x71, 0xfc, 0x8e, 0xaa, 0x1e, 0xf8, 0x4b, 0x9a, 0x57, 0x4d, 0x04, 0x8f, 0xfc, 0x41,
	0xae, 0x23, 0x05, 0x2c, 0xaf, 0xad, 0xfb, 0xe0, 0x62, 0xed, 0x67, 0xd0, 0xce, 0x4b, 0xb3, 0x03,
	0x9e, 0x31, 0x7c, 0xbc, 0x30, 0xe0, 0x51, 0xe5, 0x61, 0x6d, 0x85, 0x18, 0x89, 0x37, 0x4c, 0xd5,
	0xdc, 0x6d, 0xb0, 0xb4, 0x65, 0x10, 0xa8, 0x7b, 0xb1, 0xaf, 0x0c, 0xb2, 0x41, 0xf1, 0x5b, 0x5e,
	0x78, 0x26, 0xa6, 0x79, 0xa0, 0x9e, 0x89, 0xa9, 0xbb, 0x80, 0xce, 0x13, 0xe6, 0x9d, 0xcf, 0x93,
	0x3c, 0x50, 0x56, 0x6a, 0x68, 0x63, 0xa9, 0x86, 0x7e, 0xc3, 0x28, 0xef, 0x7d, 0x68, 0xce, 0xa3,
	0x60, 0x91, 0x67, 0x4a, 0x87, 0x5a, 0x12, 0x1c, 0x09, 0xd9, 0xf9, 0x87, 0xb1, 0x87, 0x65, 0x33,
	0xda, 0xb0, 0x43, 0x0b, 0xd8, 0xfd, 0x2f, 0xe8, 0xf4, 0x17, 0x09, 0x0e, 0x36, 0xdf, 0x1a, 0xa2,
	0x2b, 0x87, 0x32, 0x97, 0x0e, 0xb5, 0xb2, 0x73, 0x2d, 0xdf, 0x79, 0xe7, 0xf7, 0x06, 0xd4, 0xa5,
	0x89, 0x90, 0xdb, 0x50, 0xef, 0x7b, 0x67, 0x31, 0x59, 0xb2, 0x84, 0x8d, 0x25, 0xc8, 0x5d, 0x23,
	0x5f, 0xa8, 0x61, 0x69, 0x3e, 0x03, 0xee, 0xe4, 0x16, 0x86, 0x16, 0xf8, 0x0a, 0xf7, 0x36, 0xb4,
	0xbe, 0x8b, 0x83, 0xe8, 0xa9, 0x9a, 0x1f, 0x92, 0x55, 0x7b, 0x7c, 0x85, 0xff, 0x01, 0x58, 0x03,
	0x21, 0x0d, 0xff, 0x55, 0x56, 0x6c, 0xb4, 0xaa, 0x3e, 0xe1, 0xae, 0xed, 0xfc, 0xb6, 0x06, 0xf5,
	0x1f, 0x79, 0x1a, 0x93, 0x2f, 0xa0, 0xa9, 0x27, 0x07, 0xa4, 0x32, 0x21, 0xd8, 0xc0, 0xc0, 0xbf,
	0x32, 0x52, 0xc0, 0x5d, 0xba, 0x2a, 0xa8, 0x97, 0x3d, 0x07, 0x29, 0x07, 0x1b, 0xaf, 0x1c, 0xea,
	0x31, 0x74, 0x87, 0x59, 0xca, 0xd9, 0xac, 0xc2, 0xbe, 0xac, 0xa4, 0xab, 0x1a, 0x18, 0x77, 0xed,
	0x91, 0x21, 0x33, 0x9d, 0x0a, 0x1e, 0x2b, 0x02, 0xab, 0xbd, 0x08, 0x32, 0xdf, 0x85, 0xd6, 0xf0,
	0x2c, 0x9e, 0x87, 0xfe, 0x90, 0xa7, 0x17, 0x9c, 0x54, 0xa6, 0x77, 0x1b, 0x95, 0x6f, 0x77, 0x8d,
	0x6c, 0x01, 0x28, 0xf7, 0x3a, 0x09, 0x7c, 0x41, 0x9a, 0x92, 0x76, 0x38, 0x9f, 0xa9, 0x45, 0x2b,
	0x7e, 0xa7, 0x38, 0x2b, 0x41, 0xe6, 0x4d, 0x9c, 0x5f, 0x41, 0xe7, 0x29, 0x86, 0xbc, 0xa3, 0x74,
	0x77, 0x12, 0xa7, 0x19, 0x59, 0x9d, 0xe0, 0x6d, 0xac, 0x22, 0xdc, 0x35, 0xf2, 0x08, 0xec, 0x51,
	0x7a, 0xa9, 0xf8, 0xdf, 0xd1, 0xa1, 0xb0, 0xdc, 0xef, 0x8a, 0x5b, 0xee, 0xfc, 0xba, 0x06, 0xd6,
	0x0f, 0x71, 0x7a, 0xce, 0x53, 0x72, 0x1f, 0x2c, 0x6c, 0x1a, 0xb5, 0x11, 0x15, 0x0d, 0xe4, 0x55,
	0x1b, 0xdd, 0x06, 0x07, 0x95, 0x32, 0x62, 0xe2, 0x5c, 0x3d, 0x15, 0xfe, 0x69, 0xa7, 0xf4, 0xa2,
	0xaa, 0x0a, 0x7c, 0xd7, 0x75, 0xf5, 0x50, 0x45, 0xa3, 0xbc, 0xd4, 0xc9, 0x6d, 0x34, 0x55, 0x5b,
	0x36, 0x74, 0xd7, 0xb6, 0x8c, 0x47, 0x06, 0xb9, 0x07, 0xf5, 0xa1, 0xba, 0xa9, 0x64, 0x2a, 0xff,
	0xd8, 0xd8, 0x58, 0xcf, 0x11, 0xc5, 0xca, 0x0f, 0xc1, 0x52, 0xc5, 0x80, 0xba, 0xe6, 0x52, 0xc5,
	0xb4, 0xd1, 0xad, 0xa2, 0xb4, 0xc0, 0x3d, 0xb0, 0x54, 0xb4, 0x50, 0x02, 0x4b, 0x91, 0x43, 0x9d,
	0x5a, 0x05, 0x1f, 0xc5, 0xaa, 0xdc, 0x5b, 0xb1, 0x2e, 0xb9, 0xfa, 0x0a, 0xeb, 0x03, 0xe8, 0x52,
	0xee, 0xf1, 0xa0, 0x92, 0x5a, 0x49, 0x7e, 0xa9, 0x55, 0xb3, 0xdd, 0x32, 0xc8, 0x63, 0xe8, 0x2c,
	0xa5, 0x61, 0xd2, 0x43, 0x45, 0x5f, 0x91, 0x99, 0x57, 0x85, 0x27, 0x16, 0xfe, 0xb5, 0xfb, 0xd5,
	0xdf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x2c, 0x6d, 0x7f, 0x60, 0x1e, 0x1e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RaftClient is the client API for Raft service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaftClient interface {
	Echo(ctx context.Context, in *api.Payload, opts ...grpc.CallOption) (*api.Payload, error)
	RaftMessage(ctx context.Context, in *RaftBatch, opts ...grpc.CallOption) (*api.Payload, error)
	JoinCluster(ctx context.Context, in *RaftContext, opts ...grpc.CallOption) (*api.Payload, error)
	IsPeer(ctx context.Context, in *RaftContext, opts ...grpc.CallOption) (*PeerResponse, error)
}

type raftClient struct {
	cc *grpc.ClientConn
}

func NewRaftClient(cc *grpc.ClientConn) RaftClient {
	return &raftClient{cc}
}

func (c *raftClient) Echo(ctx context.Context, in *api.Payload, opts ...grpc.CallOption) (*api.Payload, error) {
	out := new(api.Payload)
	err := c.cc.Invoke(ctx, "/pb.Raft/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftClient) RaftMessage(ctx context.Context, in *RaftBatch, opts ...grpc.CallOption) (*api.Payload, error) {
	out := new(api.Payload)
	err := c.cc.Invoke(ctx, "/pb.Raft/RaftMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftClient) JoinCluster(ctx context.Context, in *RaftContext, opts ...grpc.CallOption) (*api.Payload, error) {
	out := new(api.Payload)
	err := c.cc.Invoke(ctx, "/pb.Raft/JoinCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftClient) IsPeer(ctx context.Context, in *RaftContext, opts ...grpc.CallOption) (*PeerResponse, error) {
	out := new(PeerResponse)
	err := c.cc.Invoke(ctx, "/pb.Raft/IsPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RaftServer is the server API for Raft service.
type RaftServer interface {
	Echo(context.Context, *api.Payload) (*api.Payload, error)
	RaftMessage(context.Context, *RaftBatch) (*api.Payload, error)
	JoinCluster(context.Context, *RaftContext) (*api.Payload, error)
	IsPeer(context.Context, *RaftContext) (*PeerResponse, error)
}

func RegisterRaftServer(s *grpc.Server, srv RaftServer) {
	s.RegisterService(&_Raft_serviceDesc, srv)
}

func _Raft_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(api.Payload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Raft/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServer).Echo(ctx, req.(*api.Payload))
	}
	return interceptor(ctx, in, info, handler)
}

func _Raft_RaftMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RaftBatch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServer).RaftMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Raft/RaftMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServer).RaftMessage(ctx, req.(*RaftBatch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Raft_JoinCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RaftContext)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServer).JoinCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Raft/JoinCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServer).JoinCluster(ctx, req.(*RaftContext))
	}
	return interceptor(ctx, in, info, handler)
}

func _Raft_IsPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RaftContext)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServer).IsPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Raft/IsPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServer).IsPeer(ctx, req.(*RaftContext))
	}
	return interceptor(ctx, in, info, handler)
}

var _Raft_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Raft",
	HandlerType: (*RaftServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _Raft_Echo_Handler,
		},
		{
			MethodName: "RaftMessage",
			Handler:    _Raft_RaftMessage_Handler,
		},
		{
			MethodName: "JoinCluster",
			Handler:    _Raft_JoinCluster_Handler,
		},
		{
			MethodName: "IsPeer",
			Handler:    _Raft_IsPeer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb.proto",
}

// ZeroClient is the client API for Zero service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZeroClient interface {
	// These 3 endpoints are for handling membership.
	Connect(ctx context.Context, in *Member, opts ...grpc.CallOption) (*ConnectionState, error)
	UpdateMembership(ctx context.Context, in *Group, opts ...grpc.CallOption) (*api.Payload, error)
	StreamMembership(ctx context.Context, in *api.Payload, opts ...grpc.CallOption) (Zero_StreamMembershipClient, error)
	Oracle(ctx context.Context, in *api.Payload, opts ...grpc.CallOption) (Zero_OracleClient, error)
	ShouldServe(ctx context.Context, in *Tablet, opts ...grpc.CallOption) (*Tablet, error)
	AssignUids(ctx context.Context, in *Num, opts ...grpc.CallOption) (*AssignedIds, error)
	Timestamps(ctx context.Context, in *Num, opts ...grpc.CallOption) (*AssignedIds, error)
	CommitOrAbort(ctx context.Context, in *api.TxnContext, opts ...grpc.CallOption) (*api.TxnContext, error)
	TryAbort(ctx context.Context, in *TxnTimestamps, opts ...grpc.CallOption) (*OracleDelta, error)
}

type zeroClient struct {
	cc *grpc.ClientConn
}

func NewZeroClient(cc *grpc.ClientConn) ZeroClient {
	return &zeroClient{cc}
}

func (c *zeroClient) Connect(ctx context.Context, in *Member, opts ...grpc.CallOption) (*ConnectionState, error) {
	out := new(ConnectionState)
	err := c.cc.Invoke(ctx, "/pb.Zero/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zeroClient) UpdateMembership(ctx context.Context, in *Group, opts ...grpc.CallOption) (*api.Payload, error) {
	out := new(api.Payload)
	err := c.cc.Invoke(ctx, "/pb.Zero/UpdateMembership", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zeroClient) StreamMembership(ctx context.Context, in *api.Payload, opts ...grpc.CallOption) (Zero_StreamMembershipClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Zero_serviceDesc.Streams[0], "/pb.Zero/StreamMembership", opts...)
	if err != nil {
		return nil, err
	}
	x := &zeroStreamMembershipClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Zero_StreamMembershipClient interface {
	Recv() (*MembershipState, error)
	grpc.ClientStream
}

type zeroStreamMembershipClient struct {
	grpc.ClientStream
}

func (x *zeroStreamMembershipClient) Recv() (*MembershipState, error) {
	m := new(MembershipState)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *zeroClient) Oracle(ctx context.Context, in *api.Payload, opts ...grpc.CallOption) (Zero_OracleClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Zero_serviceDesc.Streams[1], "/pb.Zero/Oracle", opts...)
	if err != nil {
		return nil, err
	}
	x := &zeroOracleClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Zero_OracleClient interface {
	Recv() (*OracleDelta, error)
	grpc.ClientStream
}

type zeroOracleClient struct {
	grpc.ClientStream
}

func (x *zeroOracleClient) Recv() (*OracleDelta, error) {
	m := new(OracleDelta)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *zeroClient) ShouldServe(ctx context.Context, in *Tablet, opts ...grpc.CallOption) (*Tablet, error) {
	out := new(Tablet)
	err := c.cc.Invoke(ctx, "/pb.Zero/ShouldServe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zeroClient) AssignUids(ctx context.Context, in *Num, opts ...grpc.CallOption) (*AssignedIds, error) {
	out := new(AssignedIds)
	err := c.cc.Invoke(ctx, "/pb.Zero/AssignUids", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zeroClient) Timestamps(ctx context.Context, in *Num, opts ...grpc.CallOption) (*AssignedIds, error) {
	out := new(AssignedIds)
	err := c.cc.Invoke(ctx, "/pb.Zero/Timestamps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zeroClient) CommitOrAbort(ctx context.Context, in *api.TxnContext, opts ...grpc.CallOption) (*api.TxnContext, error) {
	out := new(api.TxnContext)
	err := c.cc.Invoke(ctx, "/pb.Zero/CommitOrAbort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zeroClient) TryAbort(ctx context.Context, in *TxnTimestamps, opts ...grpc.CallOption) (*OracleDelta, error) {
	out := new(OracleDelta)
	err := c.cc.Invoke(ctx, "/pb.Zero/TryAbort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZeroServer is the server API for Zero service.
type ZeroServer interface {
	// These 3 endpoints are for handling membership.
	Connect(context.Context, *Member) (*ConnectionState, error)
	UpdateMembership(context.Context, *Group) (*api.Payload, error)
	StreamMembership(*api.Payload, Zero_StreamMembershipServer) error
	Oracle(*api.Payload, Zero_OracleServer) error
	ShouldServe(context.Context, *Tablet) (*Tablet, error)
	AssignUids(context.Context, *Num) (*AssignedIds, error)
	Timestamps(context.Context, *Num) (*AssignedIds, error)
	CommitOrAbort(context.Context, *api.TxnContext) (*api.TxnContext, error)
	TryAbort(context.Context, *TxnTimestamps) (*OracleDelta, error)
}

func RegisterZeroServer(s *grpc.Server, srv ZeroServer) {
	s.RegisterService(&_Zero_serviceDesc, srv)
}

func _Zero_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Member)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeroServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Zero/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeroServer).Connect(ctx, req.(*Member))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zero_UpdateMembership_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Group)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeroServer).UpdateMembership(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Zero/UpdateMembership",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeroServer).UpdateMembership(ctx, req.(*Group))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zero_StreamMembership_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(api.Payload)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ZeroServer).StreamMembership(m, &zeroStreamMembershipServer{stream})
}

type Zero_StreamMembershipServer interface {
	Send(*MembershipState) error
	grpc.ServerStream
}

type zeroStreamMembershipServer struct {
	grpc.ServerStream
}

func (x *zeroStreamMembershipServer) Send(m *MembershipState) error {
	return x.ServerStream.SendMsg(m)
}

func _Zero_Oracle_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(api.Payload)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ZeroServer).Oracle(m, &zeroOracleServer{stream})
}

type Zero_OracleServer interface {
	Send(*OracleDelta) error
	grpc.ServerStream
}

type zeroOracleServer struct {
	grpc.ServerStream
}

func (x *zeroOracleServer) Send(m *OracleDelta) error {
	return x.ServerStream.SendMsg(m)
}

func _Zero_ShouldServe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tablet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeroServer).ShouldServe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Zero/ShouldServe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeroServer).ShouldServe(ctx, req.(*Tablet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zero_AssignUids_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Num)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeroServer).AssignUids(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Zero/AssignUids",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeroServer).AssignUids(ctx, req.(*Num))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zero_Timestamps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Num)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeroServer).Timestamps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Zero/Timestamps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeroServer).Timestamps(ctx, req.(*Num))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zero_CommitOrAbort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(api.TxnContext)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeroServer).CommitOrAbort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Zero/CommitOrAbort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeroServer).CommitOrAbort(ctx, req.(*api.TxnContext))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zero_TryAbort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxnTimestamps)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZeroServer).TryAbort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Zero/TryAbort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZeroServer).TryAbort(ctx, req.(*TxnTimestamps))
	}
	return interceptor(ctx, in, info, handler)
}

var _Zero_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Zero",
	HandlerType: (*ZeroServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _Zero_Connect_Handler,
		},
		{
			MethodName: "UpdateMembership",
			Handler:    _Zero_UpdateMembership_Handler,
		},
		{
			MethodName: "ShouldServe",
			Handler:    _Zero_ShouldServe_Handler,
		},
		{
			MethodName: "AssignUids",
			Handler:    _Zero_AssignUids_Handler,
		},
		{
			MethodName: "Timestamps",
			Handler:    _Zero_Timestamps_Handler,
		},
		{
			MethodName: "CommitOrAbort",
			Handler:    _Zero_CommitOrAbort_Handler,
		},
		{
			MethodName: "TryAbort",
			Handler:    _Zero_TryAbort_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamMembership",
			Handler:       _Zero_StreamMembership_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Oracle",
			Handler:       _Zero_Oracle_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pb.proto",
}

// WorkerClient is the client API for Worker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkerClient interface {
	// Data serving RPCs.
	Mutate(ctx context.Context, in *Mutations, opts ...grpc.CallOption) (*api.TxnContext, error)
	ServeTask(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Result, error)
	StreamSnapshot(ctx context.Context, opts ...grpc.CallOption) (Worker_StreamSnapshotClient, error)
	Sort(ctx context.Context, in *SortMessage, opts ...grpc.CallOption) (*SortResult, error)
	Schema(ctx context.Context, in *SchemaRequest, opts ...grpc.CallOption) (*SchemaResult, error)
	Backup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*Status, error)
	Export(ctx context.Context, in *ExportRequest, opts ...grpc.CallOption) (*Status, error)
	ReceivePredicate(ctx context.Context, opts ...grpc.CallOption) (Worker_ReceivePredicateClient, error)
	MovePredicate(ctx context.Context, in *MovePredicatePayload, opts ...grpc.CallOption) (*api.Payload, error)
}

type workerClient struct {
	cc *grpc.ClientConn
}

func NewWorkerClient(cc *grpc.ClientConn) WorkerClient {
	return &workerClient{cc}
}

func (c *workerClient) Mutate(ctx context.Context, in *Mutations, opts ...grpc.CallOption) (*api.TxnContext, error) {
	out := new(api.TxnContext)
	err := c.cc.Invoke(ctx, "/pb.Worker/Mutate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workerClient) ServeTask(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.Worker/ServeTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workerClient) StreamSnapshot(ctx context.Context, opts ...grpc.CallOption) (Worker_StreamSnapshotClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Worker_serviceDesc.Streams[0], "/pb.Worker/StreamSnapshot", opts...)
	if err != nil {
		return nil, err
	}
	x := &workerStreamSnapshotClient{stream}
	return x, nil
}

type Worker_StreamSnapshotClient interface {
	Send(*Snapshot) error
	Recv() (*KVS, error)
	grpc.ClientStream
}

type workerStreamSnapshotClient struct {
	grpc.ClientStream
}

func (x *workerStreamSnapshotClient) Send(m *Snapshot) error {
	return x.ClientStream.SendMsg(m)
}

func (x *workerStreamSnapshotClient) Recv() (*KVS, error) {
	m := new(KVS)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *workerClient) Sort(ctx context.Context, in *SortMessage, opts ...grpc.CallOption) (*SortResult, error) {
	out := new(SortResult)
	err := c.cc.Invoke(ctx, "/pb.Worker/Sort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workerClient) Schema(ctx context.Context, in *SchemaRequest, opts ...grpc.CallOption) (*SchemaResult, error) {
	out := new(SchemaResult)
	err := c.cc.Invoke(ctx, "/pb.Worker/Schema", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workerClient) Backup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/pb.Worker/Backup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workerClient) Export(ctx context.Context, in *ExportRequest, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/pb.Worker/Export", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workerClient) ReceivePredicate(ctx context.Context, opts ...grpc.CallOption) (Worker_ReceivePredicateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Worker_serviceDesc.Streams[1], "/pb.Worker/ReceivePredicate", opts...)
	if err != nil {
		return nil, err
	}
	x := &workerReceivePredicateClient{stream}
	return x, nil
}

type Worker_ReceivePredicateClient interface {
	Send(*KVS) error
	CloseAndRecv() (*api.Payload, error)
	grpc.ClientStream
}

type workerReceivePredicateClient struct {
	grpc.ClientStream
}

func (x *workerReceivePredicateClient) Send(m *KVS) error {
	return x.ClientStream.SendMsg(m)
}

func (x *workerReceivePredicateClient) CloseAndRecv() (*api.Payload, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(api.Payload)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *workerClient) MovePredicate(ctx context.Context, in *MovePredicatePayload, opts ...grpc.CallOption) (*api.Payload, error) {
	out := new(api.Payload)
	err := c.cc.Invoke(ctx, "/pb.Worker/MovePredicate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkerServer is the server API for Worker service.
type WorkerServer interface {
	// Data serving RPCs.
	Mutate(context.Context, *Mutations) (*api.TxnContext, error)
	ServeTask(context.Context, *Query) (*Result, error)
	StreamSnapshot(Worker_StreamSnapshotServer) error
	Sort(context.Context, *SortMessage) (*SortResult, error)
	Schema(context.Context, *SchemaRequest) (*SchemaResult, error)
	Backup(context.Context, *BackupRequest) (*Status, error)
	Export(context.Context, *ExportRequest) (*Status, error)
	ReceivePredicate(Worker_ReceivePredicateServer) error
	MovePredicate(context.Context, *MovePredicatePayload) (*api.Payload, error)
}

func RegisterWorkerServer(s *grpc.Server, srv WorkerServer) {
	s.RegisterService(&_Worker_serviceDesc, srv)
}

func _Worker_Mutate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Mutations)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServer).Mutate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Worker/Mutate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServer).Mutate(ctx, req.(*Mutations))
	}
	return interceptor(ctx, in, info, handler)
}

func _Worker_ServeTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServer).ServeTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Worker/ServeTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServer).ServeTask(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _Worker_StreamSnapshot_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WorkerServer).StreamSnapshot(&workerStreamSnapshotServer{stream})
}

type Worker_StreamSnapshotServer interface {
	Send(*KVS) error
	Recv() (*Snapshot, error)
	grpc.ServerStream
}

type workerStreamSnapshotServer struct {
	grpc.ServerStream
}

func (x *workerStreamSnapshotServer) Send(m *KVS) error {
	return x.ServerStream.SendMsg(m)
}

func (x *workerStreamSnapshotServer) Recv() (*Snapshot, error) {
	m := new(Snapshot)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Worker_Sort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SortMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServer).Sort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Worker/Sort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServer).Sort(ctx, req.(*SortMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Worker_Schema_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SchemaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServer).Schema(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Worker/Schema",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServer).Schema(ctx, req.(*SchemaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Worker_Backup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServer).Backup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Worker/Backup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServer).Backup(ctx, req.(*BackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Worker_Export_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServer).Export(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Worker/Export",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServer).Export(ctx, req.(*ExportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Worker_ReceivePredicate_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WorkerServer).ReceivePredicate(&workerReceivePredicateServer{stream})
}

type Worker_ReceivePredicateServer interface {
	SendAndClose(*api.Payload) error
	Recv() (*KVS, error)
	grpc.ServerStream
}

type workerReceivePredicateServer struct {
	grpc.ServerStream
}

func (x *workerReceivePredicateServer) SendAndClose(m *api.Payload) error {
	return x.ServerStream.SendMsg(m)
}

func (x *workerReceivePredicateServer) Recv() (*KVS, error) {
	m := new(KVS)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Worker_MovePredicate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MovePredicatePayload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServer).MovePredicate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Worker/MovePredicate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServer).MovePredicate(ctx, req.(*MovePredicatePayload))
	}
	return interceptor(ctx, in, info, handler)
}

var _Worker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Worker",
	HandlerType: (*WorkerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Mutate",
			Handler:    _Worker_Mutate_Handler,
		},
		{
			MethodName: "ServeTask",
			Handler:    _Worker_ServeTask_Handler,
		},
		{
			MethodName: "Sort",
			Handler:    _Worker_Sort_Handler,
		},
		{
			MethodName: "Schema",
			Handler:    _Worker_Schema_Handler,
		},
		{
			MethodName: "Backup",
			Handler:    _Worker_Backup_Handler,
		},
		{
			MethodName: "Export",
			Handler:    _Worker_Export_Handler,
		},
		{
			MethodName: "MovePredicate",
			Handler:    _Worker_MovePredicate_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamSnapshot",
			Handler:       _Worker_StreamSnapshot_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "ReceivePredicate",
			Handler:       _Worker_ReceivePredicate_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "pb.proto",
}
